{
    "name": "ec",
    "description": "A Pulumi package for creating and managing ec cloud resources.",
    "keywords": [
        "pulumi",
        "ec"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ec` Terraform Provider](https://github.com/terraform-providers/terraform-provider-ec).",
    "repository": "https://github.com/springload/pulumi-tf-provider-ec",
    "pluginDownloadURL": "https://github.com/springload/pulumi-tf-provider-ec/releases/download/0.1.2-alpha.1621804950+e1827ea3.dirty",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apikey": {
                "type": "string",
                "description": "API Key to use for API authentication. The only valid authentication mechanism for the Elasticsearch Service.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "Endpoint where the terraform provider will point to. Defaults to \"https://api.elastic-cloud.com\".\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow the provider to skip TLS validation on its outgoing HTTP calls.\n"
            },
            "password": {
                "type": "string",
                "description": "Password to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service\nPrivate.\n"
            },
            "timeout": {
                "type": "string",
                "description": "Timeout used for individual HTTP calls. Defaults to \"1m\".\n"
            },
            "username": {
                "type": "string",
                "description": "Username to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service\nPrivate.\n"
            },
            "verbose": {
                "type": "boolean",
                "description": "When set, a \"request.log\" file will be written with all outgoing HTTP requests. Defaults to \"false\".\n"
            },
            "verboseCredentials": {
                "type": "boolean",
                "description": "When set with verbose, the contents of the Authorization header will not be redacted. Defaults to \"false\".\n"
            },
            "verboseFile": {
                "type": "string",
                "description": "Timeout used for individual HTTP calls. Defaults to \"1m\".\n"
            }
        }
    },
    "types": {
        "ec:index/ECDeploymentApm:ECDeploymentApm": {
            "properties": {
                "config": {
                    "$ref": "#/types/ec:index/ECDeploymentApmConfig:ECDeploymentApmConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchClusterRefId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentApmTopology:ECDeploymentApmTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpEndpoint",
                        "httpsEndpoint",
                        "region",
                        "resourceId",
                        "topologies"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentApmConfig:ECDeploymentApmConfig": {
            "properties": {
                "debugEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/ECDeploymentApmTopology:ECDeploymentApmTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instanceConfigurationId",
                        "size",
                        "zoneCount"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentElasticsearch:ECDeploymentElasticsearch": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "config": {
                    "$ref": "#/types/ec:index/ECDeploymentElasticsearchConfig:ECDeploymentElasticsearchConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentElasticsearchExtension:ECDeploymentElasticsearchExtension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentElasticsearchRemoteCluster:ECDeploymentElasticsearchRemoteCluster"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotSource": {
                    "$ref": "#/types/ec:index/ECDeploymentElasticsearchSnapshotSource:ECDeploymentElasticsearchSnapshotSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentElasticsearchTopology:ECDeploymentElasticsearchTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloudId",
                        "httpEndpoint",
                        "httpsEndpoint",
                        "region",
                        "resourceId",
                        "topologies"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentElasticsearchConfig:ECDeploymentElasticsearchConfig": {
            "properties": {
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/ECDeploymentElasticsearchExtension:ECDeploymentElasticsearchExtension": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "url",
                "version"
            ]
        },
        "ec:index/ECDeploymentElasticsearchRemoteCluster:ECDeploymentElasticsearchRemoteCluster": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deploymentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipUnavailable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deploymentId"
            ]
        },
        "ec:index/ECDeploymentElasticsearchSnapshotSource:ECDeploymentElasticsearchSnapshotSource": {
            "properties": {
                "snapshotName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceElasticsearchClusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceElasticsearchClusterId"
            ]
        },
        "ec:index/ECDeploymentElasticsearchTopology:ECDeploymentElasticsearchTopology": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeData": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeIngest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeMaster": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeMl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "instanceConfigurationId",
                        "nodeRoles",
                        "nodeTypeData",
                        "nodeTypeIngest",
                        "nodeTypeMaster",
                        "nodeTypeMl",
                        "size",
                        "zoneCount"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentEnterpriseSearch:ECDeploymentEnterpriseSearch": {
            "properties": {
                "config": {
                    "$ref": "#/types/ec:index/ECDeploymentEnterpriseSearchConfig:ECDeploymentEnterpriseSearchConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchClusterRefId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentEnterpriseSearchTopology:ECDeploymentEnterpriseSearchTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpEndpoint",
                        "httpsEndpoint",
                        "region",
                        "resourceId",
                        "topologies"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentEnterpriseSearchConfig:ECDeploymentEnterpriseSearchConfig": {
            "properties": {
                "userSettingsJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/ECDeploymentEnterpriseSearchTopology:ECDeploymentEnterpriseSearchTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeAppserver": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeConnector": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeWorker": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instanceConfigurationId",
                        "nodeTypeAppserver",
                        "nodeTypeConnector",
                        "nodeTypeWorker",
                        "size",
                        "zoneCount"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentKibana:ECDeploymentKibana": {
            "properties": {
                "config": {
                    "$ref": "#/types/ec:index/ECDeploymentKibanaConfig:ECDeploymentKibanaConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchClusterRefId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentKibanaTopology:ECDeploymentKibanaTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpEndpoint",
                        "httpsEndpoint",
                        "region",
                        "resourceId",
                        "topologies"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentKibanaConfig:ECDeploymentKibanaConfig": {
            "properties": {
                "userSettingsJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsOverrideYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSettingsYaml": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/ECDeploymentKibanaTopology:ECDeploymentKibanaTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instanceConfigurationId",
                        "size",
                        "zoneCount"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentObservability:ECDeploymentObservability": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deploymentId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deploymentId",
                        "refId"
                    ]
                }
            }
        },
        "ec:index/ECDeploymentTrafficFilterRule:ECDeploymentTrafficFilterRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "source"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "source"
                    ]
                }
            }
        },
        "ec:index/getECDeploymentApm:getECDeploymentApm": {
            "properties": {
                "elasticsearchClusterRefId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/getECDeploymentApmTopology:getECDeploymentApmTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "elasticsearchClusterRefId",
                "healthy",
                "httpEndpoint",
                "httpsEndpoint",
                "refId",
                "resourceId",
                "status",
                "topologies",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentApmTopology:getECDeploymentApmTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceConfigurationId",
                "size",
                "sizeResource",
                "zoneCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentElasticsearch:getECDeploymentElasticsearch": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/getECDeploymentElasticsearchTopology:getECDeploymentElasticsearchTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cloudId",
                "healthy",
                "httpEndpoint",
                "httpsEndpoint",
                "refId",
                "resourceId",
                "status",
                "topologies",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentElasticsearchTopology:getECDeploymentElasticsearchTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeData": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeIngest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeMaster": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeMl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceConfigurationId",
                "nodeRoles",
                "nodeTypeData",
                "nodeTypeIngest",
                "nodeTypeMaster",
                "size",
                "sizeResource",
                "zoneCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentEnterpriseSearch:getECDeploymentEnterpriseSearch": {
            "properties": {
                "elasticsearchClusterRefId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/getECDeploymentEnterpriseSearchTopology:getECDeploymentEnterpriseSearchTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "elasticsearchClusterRefId",
                "healthy",
                "httpEndpoint",
                "httpsEndpoint",
                "refId",
                "resourceId",
                "status",
                "topologies",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentEnterpriseSearchTopology:getECDeploymentEnterpriseSearchTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeAppserver": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeConnector": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTypeWorker": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceConfigurationId",
                "nodeTypeAppserver",
                "nodeTypeConnector",
                "nodeTypeWorker",
                "size",
                "sizeResource",
                "zoneCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentKibana:getECDeploymentKibana": {
            "properties": {
                "elasticsearchClusterRefId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/getECDeploymentKibanaTopology:getECDeploymentKibanaTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "elasticsearchClusterRefId",
                "healthy",
                "httpEndpoint",
                "httpsEndpoint",
                "refId",
                "resourceId",
                "status",
                "topologies",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentKibanaTopology:getECDeploymentKibanaTopology": {
            "properties": {
                "instanceConfigurationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeResource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceConfigurationId",
                "size",
                "sizeResource",
                "zoneCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentObservability:getECDeploymentObservability": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deploymentId",
                "logs",
                "metrics",
                "refId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentsApm:getECDeploymentsApm": {
            "properties": {
                "healthy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/getECDeploymentsDeployment:getECDeploymentsDeployment": {
            "properties": {
                "apmResourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deploymentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchResourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enterpriseSearchResourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibanaResourceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apmResourceId",
                "deploymentId",
                "elasticsearchResourceId",
                "enterpriseSearchResourceId",
                "kibanaResourceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECDeploymentsElasticsearch:getECDeploymentsElasticsearch": {
            "properties": {
                "healthy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/getECDeploymentsEnterpriseSearch:getECDeploymentsEnterpriseSearch": {
            "properties": {
                "healthy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/getECDeploymentsKibana:getECDeploymentsKibana": {
            "properties": {
                "healthy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ec:index/getECStackApm:getECStackApm": {
            "properties": {
                "capacityConstraintsMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "capacityConstraintsMin": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compatibleNodeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "denylists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacityConstraintsMax",
                "capacityConstraintsMin",
                "compatibleNodeTypes",
                "defaultPlugins",
                "denylists",
                "dockerImage",
                "plugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECStackElasticsearch:getECStackElasticsearch": {
            "properties": {
                "capacityConstraintsMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "capacityConstraintsMin": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compatibleNodeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "denylists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacityConstraintsMax",
                "capacityConstraintsMin",
                "compatibleNodeTypes",
                "defaultPlugins",
                "denylists",
                "dockerImage",
                "plugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECStackEnterpriseSearch:getECStackEnterpriseSearch": {
            "properties": {
                "capacityConstraintsMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "capacityConstraintsMin": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compatibleNodeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "denylists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacityConstraintsMax",
                "capacityConstraintsMin",
                "compatibleNodeTypes",
                "defaultPlugins",
                "denylists",
                "dockerImage",
                "plugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ec:index/getECStackKibana:getECStackKibana": {
            "properties": {
                "capacityConstraintsMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "capacityConstraintsMin": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compatibleNodeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "denylists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacityConstraintsMax",
                "capacityConstraintsMin",
                "compatibleNodeTypes",
                "defaultPlugins",
                "denylists",
                "dockerImage",
                "plugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ec package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apikey": {
                "type": "string",
                "description": "API Key to use for API authentication. The only valid authentication mechanism for the Elasticsearch Service.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "Endpoint where the terraform provider will point to. Defaults to \"https://api.elastic-cloud.com\".\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow the provider to skip TLS validation on its outgoing HTTP calls.\n"
            },
            "password": {
                "type": "string",
                "description": "Password to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service\nPrivate.\n"
            },
            "timeout": {
                "type": "string",
                "description": "Timeout used for individual HTTP calls. Defaults to \"1m\".\n"
            },
            "username": {
                "type": "string",
                "description": "Username to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service\nPrivate.\n"
            },
            "verbose": {
                "type": "boolean",
                "description": "When set, a \"request.log\" file will be written with all outgoing HTTP requests. Defaults to \"false\".\n"
            },
            "verboseCredentials": {
                "type": "boolean",
                "description": "When set with verbose, the contents of the Authorization header will not be redacted. Defaults to \"false\".\n"
            },
            "verboseFile": {
                "type": "string",
                "description": "Timeout used for individual HTTP calls. Defaults to \"1m\".\n"
            }
        }
    },
    "resources": {
        "ec:index/eCDeployment:ECDeployment": {
            "properties": {
                "apm": {
                    "$ref": "#/types/ec:index/ECDeploymentApm:ECDeploymentApm",
                    "description": "Optional APM resource definition\n"
                },
                "apmSecretToken": {
                    "type": "string"
                },
                "deploymentTemplateId": {
                    "type": "string",
                    "description": "Required Deployment Template identifier to create the deployment from\n"
                },
                "elasticsearch": {
                    "$ref": "#/types/ec:index/ECDeploymentElasticsearch:ECDeploymentElasticsearch",
                    "description": "Required Elasticsearch resource definition\n"
                },
                "elasticsearchPassword": {
                    "type": "string",
                    "description": "Computed password obtained upon creating the Elasticsearch resource\n"
                },
                "elasticsearchUsername": {
                    "type": "string",
                    "description": "Computed username obtained upon creating the Elasticsearch resource\n"
                },
                "enterpriseSearch": {
                    "$ref": "#/types/ec:index/ECDeploymentEnterpriseSearch:ECDeploymentEnterpriseSearch",
                    "description": "Optional Enterprise Search resource definition\n"
                },
                "kibana": {
                    "$ref": "#/types/ec:index/ECDeploymentKibana:ECDeploymentKibana",
                    "description": "Optional Kibana resource definition\n"
                },
                "name": {
                    "type": "string",
                    "description": "Optional name for the deployment\n"
                },
                "observability": {
                    "$ref": "#/types/ec:index/ECDeploymentObservability:ECDeploymentObservability",
                    "description": "Optional observability settings. Ship logs and metrics to a dedicated deployment.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Required ESS region where to create the deployment, for ECE environments \"ece-region\" must be set\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "Optional request_id to set on the create operation, only use when previous create attempts return with an error and a\nrequest_id is returned as part of the error\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional map of deployment tags\n"
                },
                "trafficFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of traffic filters to apply to this deployment.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Required Elastic Stack version to use for all of the deployment resources\n"
                }
            },
            "required": [
                "apmSecretToken",
                "deploymentTemplateId",
                "elasticsearch",
                "elasticsearchPassword",
                "elasticsearchUsername",
                "name",
                "region",
                "version"
            ],
            "inputProperties": {
                "apm": {
                    "$ref": "#/types/ec:index/ECDeploymentApm:ECDeploymentApm",
                    "description": "Optional APM resource definition\n"
                },
                "deploymentTemplateId": {
                    "type": "string",
                    "description": "Required Deployment Template identifier to create the deployment from\n"
                },
                "elasticsearch": {
                    "$ref": "#/types/ec:index/ECDeploymentElasticsearch:ECDeploymentElasticsearch",
                    "description": "Required Elasticsearch resource definition\n"
                },
                "enterpriseSearch": {
                    "$ref": "#/types/ec:index/ECDeploymentEnterpriseSearch:ECDeploymentEnterpriseSearch",
                    "description": "Optional Enterprise Search resource definition\n"
                },
                "kibana": {
                    "$ref": "#/types/ec:index/ECDeploymentKibana:ECDeploymentKibana",
                    "description": "Optional Kibana resource definition\n"
                },
                "name": {
                    "type": "string",
                    "description": "Optional name for the deployment\n"
                },
                "observability": {
                    "$ref": "#/types/ec:index/ECDeploymentObservability:ECDeploymentObservability",
                    "description": "Optional observability settings. Ship logs and metrics to a dedicated deployment.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Required ESS region where to create the deployment, for ECE environments \"ece-region\" must be set\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "Optional request_id to set on the create operation, only use when previous create attempts return with an error and a\nrequest_id is returned as part of the error\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional map of deployment tags\n"
                },
                "trafficFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of traffic filters to apply to this deployment.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Required Elastic Stack version to use for all of the deployment resources\n"
                }
            },
            "requiredInputs": [
                "deploymentTemplateId",
                "elasticsearch",
                "region",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ECDeployment resources.\n",
                "properties": {
                    "apm": {
                        "$ref": "#/types/ec:index/ECDeploymentApm:ECDeploymentApm",
                        "description": "Optional APM resource definition\n"
                    },
                    "apmSecretToken": {
                        "type": "string"
                    },
                    "deploymentTemplateId": {
                        "type": "string",
                        "description": "Required Deployment Template identifier to create the deployment from\n"
                    },
                    "elasticsearch": {
                        "$ref": "#/types/ec:index/ECDeploymentElasticsearch:ECDeploymentElasticsearch",
                        "description": "Required Elasticsearch resource definition\n"
                    },
                    "elasticsearchPassword": {
                        "type": "string",
                        "description": "Computed password obtained upon creating the Elasticsearch resource\n"
                    },
                    "elasticsearchUsername": {
                        "type": "string",
                        "description": "Computed username obtained upon creating the Elasticsearch resource\n"
                    },
                    "enterpriseSearch": {
                        "$ref": "#/types/ec:index/ECDeploymentEnterpriseSearch:ECDeploymentEnterpriseSearch",
                        "description": "Optional Enterprise Search resource definition\n"
                    },
                    "kibana": {
                        "$ref": "#/types/ec:index/ECDeploymentKibana:ECDeploymentKibana",
                        "description": "Optional Kibana resource definition\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Optional name for the deployment\n"
                    },
                    "observability": {
                        "$ref": "#/types/ec:index/ECDeploymentObservability:ECDeploymentObservability",
                        "description": "Optional observability settings. Ship logs and metrics to a dedicated deployment.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Required ESS region where to create the deployment, for ECE environments \"ece-region\" must be set\n"
                    },
                    "requestId": {
                        "type": "string",
                        "description": "Optional request_id to set on the create operation, only use when previous create attempts return with an error and a\nrequest_id is returned as part of the error\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Optional map of deployment tags\n"
                    },
                    "trafficFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optional list of traffic filters to apply to this deployment.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Required Elastic Stack version to use for all of the deployment resources\n"
                    }
                },
                "type": "object"
            }
        },
        "ec:index/eCDeploymentExtension:ECDeploymentExtension": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for extension\n"
                },
                "downloadUrl": {
                    "type": "string",
                    "description": "download url\n"
                },
                "extensionType": {
                    "type": "string",
                    "description": "Extension type. bundle or plugin\n"
                },
                "fileHash": {
                    "type": "string",
                    "description": "file hash\n"
                },
                "filePath": {
                    "type": "string",
                    "description": "file path\n"
                },
                "lastModified": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Required name of the ruleset\n"
                },
                "size": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "description": "Eleasticsearch version\n"
                }
            },
            "required": [
                "extensionType",
                "lastModified",
                "name",
                "size",
                "url",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for extension\n"
                },
                "downloadUrl": {
                    "type": "string",
                    "description": "download url\n"
                },
                "extensionType": {
                    "type": "string",
                    "description": "Extension type. bundle or plugin\n"
                },
                "fileHash": {
                    "type": "string",
                    "description": "file hash\n"
                },
                "filePath": {
                    "type": "string",
                    "description": "file path\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required name of the ruleset\n"
                },
                "version": {
                    "type": "string",
                    "description": "Eleasticsearch version\n"
                }
            },
            "requiredInputs": [
                "extensionType",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ECDeploymentExtension resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for extension\n"
                    },
                    "downloadUrl": {
                        "type": "string",
                        "description": "download url\n"
                    },
                    "extensionType": {
                        "type": "string",
                        "description": "Extension type. bundle or plugin\n"
                    },
                    "fileHash": {
                        "type": "string",
                        "description": "file hash\n"
                    },
                    "filePath": {
                        "type": "string",
                        "description": "file path\n"
                    },
                    "lastModified": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Required name of the ruleset\n"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "description": "Eleasticsearch version\n"
                    }
                },
                "type": "object"
            }
        },
        "ec:index/eCDeploymentTrafficFilter:ECDeploymentTrafficFilter": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional ruleset description\n"
                },
                "includeByDefault": {
                    "type": "boolean",
                    "description": "Should the ruleset be automatically included in the new deployments (Defaults to false)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required name of the ruleset\n"
                },
                "region": {
                    "type": "string",
                    "description": "Required filter region, the ruleset can only be attached to deployments in the specific region\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentTrafficFilterRule:ECDeploymentTrafficFilterRule"
                    },
                    "description": "Required list of rules, which the ruleset is made of.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Required type of the ruleset (\"ip\" or \"vpce\")\n"
                }
            },
            "required": [
                "name",
                "region",
                "rules",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional ruleset description\n"
                },
                "includeByDefault": {
                    "type": "boolean",
                    "description": "Should the ruleset be automatically included in the new deployments (Defaults to false)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required name of the ruleset\n"
                },
                "region": {
                    "type": "string",
                    "description": "Required filter region, the ruleset can only be attached to deployments in the specific region\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ec:index/ECDeploymentTrafficFilterRule:ECDeploymentTrafficFilterRule"
                    },
                    "description": "Required list of rules, which the ruleset is made of.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Required type of the ruleset (\"ip\" or \"vpce\")\n"
                }
            },
            "requiredInputs": [
                "region",
                "rules",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ECDeploymentTrafficFilter resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional ruleset description\n"
                    },
                    "includeByDefault": {
                        "type": "boolean",
                        "description": "Should the ruleset be automatically included in the new deployments (Defaults to false)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Required name of the ruleset\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Required filter region, the ruleset can only be attached to deployments in the specific region\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/ECDeploymentTrafficFilterRule:ECDeploymentTrafficFilterRule"
                        },
                        "description": "Required list of rules, which the ruleset is made of.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Required type of the ruleset (\"ip\" or \"vpce\")\n"
                    }
                },
                "type": "object"
            }
        },
        "ec:index/eCDeploymentTrafficFilterAssociation:ECDeploymentTrafficFilterAssociation": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "description": "Required deployment ID where the traffic filter will be associated\n"
                },
                "trafficFilterId": {
                    "type": "string",
                    "description": "Required traffic filter ruleset ID to tie to a deployment\n"
                }
            },
            "required": [
                "deploymentId",
                "trafficFilterId"
            ],
            "inputProperties": {
                "deploymentId": {
                    "type": "string",
                    "description": "Required deployment ID where the traffic filter will be associated\n"
                },
                "trafficFilterId": {
                    "type": "string",
                    "description": "Required traffic filter ruleset ID to tie to a deployment\n"
                }
            },
            "requiredInputs": [
                "deploymentId",
                "trafficFilterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ECDeploymentTrafficFilterAssociation resources.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "Required deployment ID where the traffic filter will be associated\n"
                    },
                    "trafficFilterId": {
                        "type": "string",
                        "description": "Required traffic filter ruleset ID to tie to a deployment\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ec:index/getECDeployment:getECDeployment": {
            "inputs": {
                "description": "A collection of arguments for invoking getECDeployment.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getECDeployment.\n",
                "properties": {
                    "apms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECDeploymentApm:getECDeploymentApm"
                        }
                    },
                    "deploymentTemplateId": {
                        "type": "string"
                    },
                    "elasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECDeploymentElasticsearch:getECDeploymentElasticsearch"
                        }
                    },
                    "enterpriseSearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECDeploymentEnterpriseSearch:getECDeploymentEnterpriseSearch"
                        }
                    },
                    "healthy": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kibanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECDeploymentKibana:getECDeploymentKibana"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "observabilities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECDeploymentObservability:getECDeploymentObservability"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "trafficFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "apms",
                    "deploymentTemplateId",
                    "elasticsearches",
                    "enterpriseSearches",
                    "healthy",
                    "id",
                    "kibanas",
                    "name",
                    "observabilities",
                    "region",
                    "tags",
                    "trafficFilters"
                ]
            }
        },
        "ec:index/getECDeployments:getECDeployments": {
            "inputs": {
                "description": "A collection of arguments for invoking getECDeployments.\n",
                "properties": {
                    "apm": {
                        "$ref": "#/types/ec:index/getECDeploymentsApm:getECDeploymentsApm"
                    },
                    "deploymentTemplateId": {
                        "type": "string"
                    },
                    "elasticsearch": {
                        "$ref": "#/types/ec:index/getECDeploymentsElasticsearch:getECDeploymentsElasticsearch"
                    },
                    "enterpriseSearch": {
                        "$ref": "#/types/ec:index/getECDeploymentsEnterpriseSearch:getECDeploymentsEnterpriseSearch"
                    },
                    "healthy": {
                        "type": "string"
                    },
                    "kibana": {
                        "$ref": "#/types/ec:index/getECDeploymentsKibana:getECDeploymentsKibana"
                    },
                    "namePrefix": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getECDeployments.\n",
                "properties": {
                    "apm": {
                        "$ref": "#/types/ec:index/getECDeploymentsApm:getECDeploymentsApm"
                    },
                    "deploymentTemplateId": {
                        "type": "string"
                    },
                    "deployments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECDeploymentsDeployment:getECDeploymentsDeployment"
                        }
                    },
                    "elasticsearch": {
                        "$ref": "#/types/ec:index/getECDeploymentsElasticsearch:getECDeploymentsElasticsearch"
                    },
                    "enterpriseSearch": {
                        "$ref": "#/types/ec:index/getECDeploymentsEnterpriseSearch:getECDeploymentsEnterpriseSearch"
                    },
                    "healthy": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kibana": {
                        "$ref": "#/types/ec:index/getECDeploymentsKibana:getECDeploymentsKibana"
                    },
                    "namePrefix": {
                        "type": "string"
                    },
                    "returnCount": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "deployments",
                    "returnCount",
                    "id"
                ]
            }
        },
        "ec:index/getECStack:getECStack": {
            "inputs": {
                "description": "A collection of arguments for invoking getECStack.\n",
                "properties": {
                    "lock": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "versionRegex": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "region",
                    "versionRegex"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getECStack.\n",
                "properties": {
                    "accessible": {
                        "type": "boolean"
                    },
                    "allowlisted": {
                        "type": "boolean"
                    },
                    "apms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECStackApm:getECStackApm"
                        }
                    },
                    "elasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECStackElasticsearch:getECStackElasticsearch"
                        }
                    },
                    "enterpriseSearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECStackEnterpriseSearch:getECStackEnterpriseSearch"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kibanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ec:index/getECStackKibana:getECStackKibana"
                        }
                    },
                    "lock": {
                        "type": "boolean"
                    },
                    "minUpgradableFrom": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "upgradableTos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "versionRegex": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessible",
                    "allowlisted",
                    "apms",
                    "elasticsearches",
                    "enterpriseSearches",
                    "kibanas",
                    "minUpgradableFrom",
                    "region",
                    "upgradableTos",
                    "version",
                    "versionRegex",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-ec/sdk/go/ec"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing ec cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-ec)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-ec` repo](https://github.com/pulumi/pulumi-ec/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-ec` repo](https://github.com/terraform-providers/terraform-provider-ec/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-ec)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-ec` repo](https://github.com/pulumi/pulumi-ec/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-ec` repo](https://github.com/terraform-providers/terraform-provider-ec/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}