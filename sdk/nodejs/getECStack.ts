// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getECStack(args: GetECStackArgs, opts?: pulumi.InvokeOptions): Promise<GetECStackResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("ec:index/getECStack:getECStack", {
        "lock": args.lock,
        "region": args.region,
        "versionRegex": args.versionRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getECStack.
 */
export interface GetECStackArgs {
    readonly lock?: boolean;
    readonly region: string;
    readonly versionRegex: string;
}

/**
 * A collection of values returned by getECStack.
 */
export interface GetECStackResult {
    readonly accessible: boolean;
    readonly allowlisted: boolean;
    readonly apms: outputs.GetECStackApm[];
    readonly elasticsearches: outputs.GetECStackElasticsearch[];
    readonly enterpriseSearches: outputs.GetECStackEnterpriseSearch[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kibanas: outputs.GetECStackKibana[];
    readonly lock?: boolean;
    readonly minUpgradableFrom: string;
    readonly region: string;
    readonly upgradableTos: string[];
    readonly version: string;
    readonly versionRegex: string;
}
