// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ECDeploymentApm struct {
	Config                    *ECDeploymentApmConfig    `pulumi:"config"`
	ElasticsearchClusterRefId *string                   `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              *string                   `pulumi:"httpEndpoint"`
	HttpsEndpoint             *string                   `pulumi:"httpsEndpoint"`
	RefId                     *string                   `pulumi:"refId"`
	Region                    *string                   `pulumi:"region"`
	ResourceId                *string                   `pulumi:"resourceId"`
	Topologies                []ECDeploymentApmTopology `pulumi:"topologies"`
}

// ECDeploymentApmInput is an input type that accepts ECDeploymentApmArgs and ECDeploymentApmOutput values.
// You can construct a concrete instance of `ECDeploymentApmInput` via:
//
//          ECDeploymentApmArgs{...}
type ECDeploymentApmInput interface {
	pulumi.Input

	ToECDeploymentApmOutput() ECDeploymentApmOutput
	ToECDeploymentApmOutputWithContext(context.Context) ECDeploymentApmOutput
}

type ECDeploymentApmArgs struct {
	Config                    ECDeploymentApmConfigPtrInput     `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput             `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              pulumi.StringPtrInput             `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringPtrInput             `pulumi:"httpsEndpoint"`
	RefId                     pulumi.StringPtrInput             `pulumi:"refId"`
	Region                    pulumi.StringPtrInput             `pulumi:"region"`
	ResourceId                pulumi.StringPtrInput             `pulumi:"resourceId"`
	Topologies                ECDeploymentApmTopologyArrayInput `pulumi:"topologies"`
}

func (ECDeploymentApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentApm)(nil)).Elem()
}

func (i ECDeploymentApmArgs) ToECDeploymentApmOutput() ECDeploymentApmOutput {
	return i.ToECDeploymentApmOutputWithContext(context.Background())
}

func (i ECDeploymentApmArgs) ToECDeploymentApmOutputWithContext(ctx context.Context) ECDeploymentApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmOutput)
}

func (i ECDeploymentApmArgs) ToECDeploymentApmPtrOutput() ECDeploymentApmPtrOutput {
	return i.ToECDeploymentApmPtrOutputWithContext(context.Background())
}

func (i ECDeploymentApmArgs) ToECDeploymentApmPtrOutputWithContext(ctx context.Context) ECDeploymentApmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmOutput).ToECDeploymentApmPtrOutputWithContext(ctx)
}

// ECDeploymentApmPtrInput is an input type that accepts ECDeploymentApmArgs, ECDeploymentApmPtr and ECDeploymentApmPtrOutput values.
// You can construct a concrete instance of `ECDeploymentApmPtrInput` via:
//
//          ECDeploymentApmArgs{...}
//
//  or:
//
//          nil
type ECDeploymentApmPtrInput interface {
	pulumi.Input

	ToECDeploymentApmPtrOutput() ECDeploymentApmPtrOutput
	ToECDeploymentApmPtrOutputWithContext(context.Context) ECDeploymentApmPtrOutput
}

type ecdeploymentApmPtrType ECDeploymentApmArgs

func ECDeploymentApmPtr(v *ECDeploymentApmArgs) ECDeploymentApmPtrInput {
	return (*ecdeploymentApmPtrType)(v)
}

func (*ecdeploymentApmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentApm)(nil)).Elem()
}

func (i *ecdeploymentApmPtrType) ToECDeploymentApmPtrOutput() ECDeploymentApmPtrOutput {
	return i.ToECDeploymentApmPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentApmPtrType) ToECDeploymentApmPtrOutputWithContext(ctx context.Context) ECDeploymentApmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmPtrOutput)
}

type ECDeploymentApmOutput struct{ *pulumi.OutputState }

func (ECDeploymentApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentApm)(nil)).Elem()
}

func (o ECDeploymentApmOutput) ToECDeploymentApmOutput() ECDeploymentApmOutput {
	return o
}

func (o ECDeploymentApmOutput) ToECDeploymentApmOutputWithContext(ctx context.Context) ECDeploymentApmOutput {
	return o
}

func (o ECDeploymentApmOutput) ToECDeploymentApmPtrOutput() ECDeploymentApmPtrOutput {
	return o.ToECDeploymentApmPtrOutputWithContext(context.Background())
}

func (o ECDeploymentApmOutput) ToECDeploymentApmPtrOutputWithContext(ctx context.Context) ECDeploymentApmPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *ECDeploymentApm {
		return &v
	}).(ECDeploymentApmPtrOutput)
}
func (o ECDeploymentApmOutput) Config() ECDeploymentApmConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *ECDeploymentApmConfig { return v.Config }).(ECDeploymentApmConfigPtrOutput)
}

func (o ECDeploymentApmOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApm) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmOutput) Topologies() ECDeploymentApmTopologyArrayOutput {
	return o.ApplyT(func(v ECDeploymentApm) []ECDeploymentApmTopology { return v.Topologies }).(ECDeploymentApmTopologyArrayOutput)
}

type ECDeploymentApmPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentApmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentApm)(nil)).Elem()
}

func (o ECDeploymentApmPtrOutput) ToECDeploymentApmPtrOutput() ECDeploymentApmPtrOutput {
	return o
}

func (o ECDeploymentApmPtrOutput) ToECDeploymentApmPtrOutputWithContext(ctx context.Context) ECDeploymentApmPtrOutput {
	return o
}

func (o ECDeploymentApmPtrOutput) Elem() ECDeploymentApmOutput {
	return o.ApplyT(func(v *ECDeploymentApm) ECDeploymentApm { return *v }).(ECDeploymentApmOutput)
}

func (o ECDeploymentApmPtrOutput) Config() ECDeploymentApmConfigPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *ECDeploymentApmConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(ECDeploymentApmConfigPtrOutput)
}

func (o ECDeploymentApmPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmPtrOutput) Topologies() ECDeploymentApmTopologyArrayOutput {
	return o.ApplyT(func(v *ECDeploymentApm) []ECDeploymentApmTopology {
		if v == nil {
			return nil
		}
		return v.Topologies
	}).(ECDeploymentApmTopologyArrayOutput)
}

type ECDeploymentApmConfig struct {
	DebugEnabled             *bool   `pulumi:"debugEnabled"`
	UserSettingsJson         *string `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         *string `pulumi:"userSettingsYaml"`
}

// ECDeploymentApmConfigInput is an input type that accepts ECDeploymentApmConfigArgs and ECDeploymentApmConfigOutput values.
// You can construct a concrete instance of `ECDeploymentApmConfigInput` via:
//
//          ECDeploymentApmConfigArgs{...}
type ECDeploymentApmConfigInput interface {
	pulumi.Input

	ToECDeploymentApmConfigOutput() ECDeploymentApmConfigOutput
	ToECDeploymentApmConfigOutputWithContext(context.Context) ECDeploymentApmConfigOutput
}

type ECDeploymentApmConfigArgs struct {
	DebugEnabled             pulumi.BoolPtrInput   `pulumi:"debugEnabled"`
	UserSettingsJson         pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (ECDeploymentApmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentApmConfig)(nil)).Elem()
}

func (i ECDeploymentApmConfigArgs) ToECDeploymentApmConfigOutput() ECDeploymentApmConfigOutput {
	return i.ToECDeploymentApmConfigOutputWithContext(context.Background())
}

func (i ECDeploymentApmConfigArgs) ToECDeploymentApmConfigOutputWithContext(ctx context.Context) ECDeploymentApmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmConfigOutput)
}

func (i ECDeploymentApmConfigArgs) ToECDeploymentApmConfigPtrOutput() ECDeploymentApmConfigPtrOutput {
	return i.ToECDeploymentApmConfigPtrOutputWithContext(context.Background())
}

func (i ECDeploymentApmConfigArgs) ToECDeploymentApmConfigPtrOutputWithContext(ctx context.Context) ECDeploymentApmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmConfigOutput).ToECDeploymentApmConfigPtrOutputWithContext(ctx)
}

// ECDeploymentApmConfigPtrInput is an input type that accepts ECDeploymentApmConfigArgs, ECDeploymentApmConfigPtr and ECDeploymentApmConfigPtrOutput values.
// You can construct a concrete instance of `ECDeploymentApmConfigPtrInput` via:
//
//          ECDeploymentApmConfigArgs{...}
//
//  or:
//
//          nil
type ECDeploymentApmConfigPtrInput interface {
	pulumi.Input

	ToECDeploymentApmConfigPtrOutput() ECDeploymentApmConfigPtrOutput
	ToECDeploymentApmConfigPtrOutputWithContext(context.Context) ECDeploymentApmConfigPtrOutput
}

type ecdeploymentApmConfigPtrType ECDeploymentApmConfigArgs

func ECDeploymentApmConfigPtr(v *ECDeploymentApmConfigArgs) ECDeploymentApmConfigPtrInput {
	return (*ecdeploymentApmConfigPtrType)(v)
}

func (*ecdeploymentApmConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentApmConfig)(nil)).Elem()
}

func (i *ecdeploymentApmConfigPtrType) ToECDeploymentApmConfigPtrOutput() ECDeploymentApmConfigPtrOutput {
	return i.ToECDeploymentApmConfigPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentApmConfigPtrType) ToECDeploymentApmConfigPtrOutputWithContext(ctx context.Context) ECDeploymentApmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmConfigPtrOutput)
}

type ECDeploymentApmConfigOutput struct{ *pulumi.OutputState }

func (ECDeploymentApmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentApmConfig)(nil)).Elem()
}

func (o ECDeploymentApmConfigOutput) ToECDeploymentApmConfigOutput() ECDeploymentApmConfigOutput {
	return o
}

func (o ECDeploymentApmConfigOutput) ToECDeploymentApmConfigOutputWithContext(ctx context.Context) ECDeploymentApmConfigOutput {
	return o
}

func (o ECDeploymentApmConfigOutput) ToECDeploymentApmConfigPtrOutput() ECDeploymentApmConfigPtrOutput {
	return o.ToECDeploymentApmConfigPtrOutputWithContext(context.Background())
}

func (o ECDeploymentApmConfigOutput) ToECDeploymentApmConfigPtrOutputWithContext(ctx context.Context) ECDeploymentApmConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmConfig) *ECDeploymentApmConfig {
		return &v
	}).(ECDeploymentApmConfigPtrOutput)
}
func (o ECDeploymentApmConfigOutput) DebugEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmConfig) *bool { return v.DebugEnabled }).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentApmConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type ECDeploymentApmConfigPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentApmConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentApmConfig)(nil)).Elem()
}

func (o ECDeploymentApmConfigPtrOutput) ToECDeploymentApmConfigPtrOutput() ECDeploymentApmConfigPtrOutput {
	return o
}

func (o ECDeploymentApmConfigPtrOutput) ToECDeploymentApmConfigPtrOutputWithContext(ctx context.Context) ECDeploymentApmConfigPtrOutput {
	return o
}

func (o ECDeploymentApmConfigPtrOutput) Elem() ECDeploymentApmConfigOutput {
	return o.ApplyT(func(v *ECDeploymentApmConfig) ECDeploymentApmConfig { return *v }).(ECDeploymentApmConfigOutput)
}

func (o ECDeploymentApmConfigPtrOutput) DebugEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApmConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DebugEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentApmConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type ECDeploymentApmTopology struct {
	InstanceConfigurationId *string `pulumi:"instanceConfigurationId"`
	Size                    *string `pulumi:"size"`
	SizeResource            *string `pulumi:"sizeResource"`
	ZoneCount               *int    `pulumi:"zoneCount"`
}

// ECDeploymentApmTopologyInput is an input type that accepts ECDeploymentApmTopologyArgs and ECDeploymentApmTopologyOutput values.
// You can construct a concrete instance of `ECDeploymentApmTopologyInput` via:
//
//          ECDeploymentApmTopologyArgs{...}
type ECDeploymentApmTopologyInput interface {
	pulumi.Input

	ToECDeploymentApmTopologyOutput() ECDeploymentApmTopologyOutput
	ToECDeploymentApmTopologyOutputWithContext(context.Context) ECDeploymentApmTopologyOutput
}

type ECDeploymentApmTopologyArgs struct {
	InstanceConfigurationId pulumi.StringPtrInput `pulumi:"instanceConfigurationId"`
	Size                    pulumi.StringPtrInput `pulumi:"size"`
	SizeResource            pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (ECDeploymentApmTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentApmTopology)(nil)).Elem()
}

func (i ECDeploymentApmTopologyArgs) ToECDeploymentApmTopologyOutput() ECDeploymentApmTopologyOutput {
	return i.ToECDeploymentApmTopologyOutputWithContext(context.Background())
}

func (i ECDeploymentApmTopologyArgs) ToECDeploymentApmTopologyOutputWithContext(ctx context.Context) ECDeploymentApmTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmTopologyOutput)
}

// ECDeploymentApmTopologyArrayInput is an input type that accepts ECDeploymentApmTopologyArray and ECDeploymentApmTopologyArrayOutput values.
// You can construct a concrete instance of `ECDeploymentApmTopologyArrayInput` via:
//
//          ECDeploymentApmTopologyArray{ ECDeploymentApmTopologyArgs{...} }
type ECDeploymentApmTopologyArrayInput interface {
	pulumi.Input

	ToECDeploymentApmTopologyArrayOutput() ECDeploymentApmTopologyArrayOutput
	ToECDeploymentApmTopologyArrayOutputWithContext(context.Context) ECDeploymentApmTopologyArrayOutput
}

type ECDeploymentApmTopologyArray []ECDeploymentApmTopologyInput

func (ECDeploymentApmTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentApmTopology)(nil)).Elem()
}

func (i ECDeploymentApmTopologyArray) ToECDeploymentApmTopologyArrayOutput() ECDeploymentApmTopologyArrayOutput {
	return i.ToECDeploymentApmTopologyArrayOutputWithContext(context.Background())
}

func (i ECDeploymentApmTopologyArray) ToECDeploymentApmTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentApmTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentApmTopologyArrayOutput)
}

type ECDeploymentApmTopologyOutput struct{ *pulumi.OutputState }

func (ECDeploymentApmTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentApmTopology)(nil)).Elem()
}

func (o ECDeploymentApmTopologyOutput) ToECDeploymentApmTopologyOutput() ECDeploymentApmTopologyOutput {
	return o
}

func (o ECDeploymentApmTopologyOutput) ToECDeploymentApmTopologyOutputWithContext(ctx context.Context) ECDeploymentApmTopologyOutput {
	return o
}

func (o ECDeploymentApmTopologyOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmTopology) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmTopologyOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmTopology) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmTopologyOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmTopology) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentApmTopologyOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ECDeploymentApmTopology) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type ECDeploymentApmTopologyArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentApmTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentApmTopology)(nil)).Elem()
}

func (o ECDeploymentApmTopologyArrayOutput) ToECDeploymentApmTopologyArrayOutput() ECDeploymentApmTopologyArrayOutput {
	return o
}

func (o ECDeploymentApmTopologyArrayOutput) ToECDeploymentApmTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentApmTopologyArrayOutput {
	return o
}

func (o ECDeploymentApmTopologyArrayOutput) Index(i pulumi.IntInput) ECDeploymentApmTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentApmTopology {
		return vs[0].([]ECDeploymentApmTopology)[vs[1].(int)]
	}).(ECDeploymentApmTopologyOutput)
}

type ECDeploymentElasticsearch struct {
	CloudId        *string                                  `pulumi:"cloudId"`
	Config         *ECDeploymentElasticsearchConfig         `pulumi:"config"`
	Extensions     []ECDeploymentElasticsearchExtension     `pulumi:"extensions"`
	HttpEndpoint   *string                                  `pulumi:"httpEndpoint"`
	HttpsEndpoint  *string                                  `pulumi:"httpsEndpoint"`
	RefId          *string                                  `pulumi:"refId"`
	Region         *string                                  `pulumi:"region"`
	RemoteClusters []ECDeploymentElasticsearchRemoteCluster `pulumi:"remoteClusters"`
	ResourceId     *string                                  `pulumi:"resourceId"`
	SnapshotSource *ECDeploymentElasticsearchSnapshotSource `pulumi:"snapshotSource"`
	Topologies     []ECDeploymentElasticsearchTopology      `pulumi:"topologies"`
}

// ECDeploymentElasticsearchInput is an input type that accepts ECDeploymentElasticsearchArgs and ECDeploymentElasticsearchOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchInput` via:
//
//          ECDeploymentElasticsearchArgs{...}
type ECDeploymentElasticsearchInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchOutput() ECDeploymentElasticsearchOutput
	ToECDeploymentElasticsearchOutputWithContext(context.Context) ECDeploymentElasticsearchOutput
}

type ECDeploymentElasticsearchArgs struct {
	CloudId        pulumi.StringPtrInput                            `pulumi:"cloudId"`
	Config         ECDeploymentElasticsearchConfigPtrInput          `pulumi:"config"`
	Extensions     ECDeploymentElasticsearchExtensionArrayInput     `pulumi:"extensions"`
	HttpEndpoint   pulumi.StringPtrInput                            `pulumi:"httpEndpoint"`
	HttpsEndpoint  pulumi.StringPtrInput                            `pulumi:"httpsEndpoint"`
	RefId          pulumi.StringPtrInput                            `pulumi:"refId"`
	Region         pulumi.StringPtrInput                            `pulumi:"region"`
	RemoteClusters ECDeploymentElasticsearchRemoteClusterArrayInput `pulumi:"remoteClusters"`
	ResourceId     pulumi.StringPtrInput                            `pulumi:"resourceId"`
	SnapshotSource ECDeploymentElasticsearchSnapshotSourcePtrInput  `pulumi:"snapshotSource"`
	Topologies     ECDeploymentElasticsearchTopologyArrayInput      `pulumi:"topologies"`
}

func (ECDeploymentElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearch)(nil)).Elem()
}

func (i ECDeploymentElasticsearchArgs) ToECDeploymentElasticsearchOutput() ECDeploymentElasticsearchOutput {
	return i.ToECDeploymentElasticsearchOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchArgs) ToECDeploymentElasticsearchOutputWithContext(ctx context.Context) ECDeploymentElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchOutput)
}

func (i ECDeploymentElasticsearchArgs) ToECDeploymentElasticsearchPtrOutput() ECDeploymentElasticsearchPtrOutput {
	return i.ToECDeploymentElasticsearchPtrOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchArgs) ToECDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchOutput).ToECDeploymentElasticsearchPtrOutputWithContext(ctx)
}

// ECDeploymentElasticsearchPtrInput is an input type that accepts ECDeploymentElasticsearchArgs, ECDeploymentElasticsearchPtr and ECDeploymentElasticsearchPtrOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchPtrInput` via:
//
//          ECDeploymentElasticsearchArgs{...}
//
//  or:
//
//          nil
type ECDeploymentElasticsearchPtrInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchPtrOutput() ECDeploymentElasticsearchPtrOutput
	ToECDeploymentElasticsearchPtrOutputWithContext(context.Context) ECDeploymentElasticsearchPtrOutput
}

type ecdeploymentElasticsearchPtrType ECDeploymentElasticsearchArgs

func ECDeploymentElasticsearchPtr(v *ECDeploymentElasticsearchArgs) ECDeploymentElasticsearchPtrInput {
	return (*ecdeploymentElasticsearchPtrType)(v)
}

func (*ecdeploymentElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentElasticsearch)(nil)).Elem()
}

func (i *ecdeploymentElasticsearchPtrType) ToECDeploymentElasticsearchPtrOutput() ECDeploymentElasticsearchPtrOutput {
	return i.ToECDeploymentElasticsearchPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentElasticsearchPtrType) ToECDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchPtrOutput)
}

type ECDeploymentElasticsearchOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearch)(nil)).Elem()
}

func (o ECDeploymentElasticsearchOutput) ToECDeploymentElasticsearchOutput() ECDeploymentElasticsearchOutput {
	return o
}

func (o ECDeploymentElasticsearchOutput) ToECDeploymentElasticsearchOutputWithContext(ctx context.Context) ECDeploymentElasticsearchOutput {
	return o
}

func (o ECDeploymentElasticsearchOutput) ToECDeploymentElasticsearchPtrOutput() ECDeploymentElasticsearchPtrOutput {
	return o.ToECDeploymentElasticsearchPtrOutputWithContext(context.Background())
}

func (o ECDeploymentElasticsearchOutput) ToECDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *ECDeploymentElasticsearch {
		return &v
	}).(ECDeploymentElasticsearchPtrOutput)
}
func (o ECDeploymentElasticsearchOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) Config() ECDeploymentElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *ECDeploymentElasticsearchConfig { return v.Config }).(ECDeploymentElasticsearchConfigPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) Extensions() ECDeploymentElasticsearchExtensionArrayOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) []ECDeploymentElasticsearchExtension { return v.Extensions }).(ECDeploymentElasticsearchExtensionArrayOutput)
}

func (o ECDeploymentElasticsearchOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) RemoteClusters() ECDeploymentElasticsearchRemoteClusterArrayOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) []ECDeploymentElasticsearchRemoteCluster { return v.RemoteClusters }).(ECDeploymentElasticsearchRemoteClusterArrayOutput)
}

func (o ECDeploymentElasticsearchOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchOutput) SnapshotSource() ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) *ECDeploymentElasticsearchSnapshotSource { return v.SnapshotSource }).(ECDeploymentElasticsearchSnapshotSourcePtrOutput)
}

func (o ECDeploymentElasticsearchOutput) Topologies() ECDeploymentElasticsearchTopologyArrayOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearch) []ECDeploymentElasticsearchTopology { return v.Topologies }).(ECDeploymentElasticsearchTopologyArrayOutput)
}

type ECDeploymentElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentElasticsearch)(nil)).Elem()
}

func (o ECDeploymentElasticsearchPtrOutput) ToECDeploymentElasticsearchPtrOutput() ECDeploymentElasticsearchPtrOutput {
	return o
}

func (o ECDeploymentElasticsearchPtrOutput) ToECDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchPtrOutput {
	return o
}

func (o ECDeploymentElasticsearchPtrOutput) Elem() ECDeploymentElasticsearchOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) ECDeploymentElasticsearch { return *v }).(ECDeploymentElasticsearchOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.CloudId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) Config() ECDeploymentElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *ECDeploymentElasticsearchConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(ECDeploymentElasticsearchConfigPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) Extensions() ECDeploymentElasticsearchExtensionArrayOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) []ECDeploymentElasticsearchExtension {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(ECDeploymentElasticsearchExtensionArrayOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) RemoteClusters() ECDeploymentElasticsearchRemoteClusterArrayOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) []ECDeploymentElasticsearchRemoteCluster {
		if v == nil {
			return nil
		}
		return v.RemoteClusters
	}).(ECDeploymentElasticsearchRemoteClusterArrayOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) SnapshotSource() ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) *ECDeploymentElasticsearchSnapshotSource {
		if v == nil {
			return nil
		}
		return v.SnapshotSource
	}).(ECDeploymentElasticsearchSnapshotSourcePtrOutput)
}

func (o ECDeploymentElasticsearchPtrOutput) Topologies() ECDeploymentElasticsearchTopologyArrayOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearch) []ECDeploymentElasticsearchTopology {
		if v == nil {
			return nil
		}
		return v.Topologies
	}).(ECDeploymentElasticsearchTopologyArrayOutput)
}

type ECDeploymentElasticsearchConfig struct {
	Plugins                  []string `pulumi:"plugins"`
	UserSettingsJson         *string  `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson *string  `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml *string  `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         *string  `pulumi:"userSettingsYaml"`
}

// ECDeploymentElasticsearchConfigInput is an input type that accepts ECDeploymentElasticsearchConfigArgs and ECDeploymentElasticsearchConfigOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchConfigInput` via:
//
//          ECDeploymentElasticsearchConfigArgs{...}
type ECDeploymentElasticsearchConfigInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchConfigOutput() ECDeploymentElasticsearchConfigOutput
	ToECDeploymentElasticsearchConfigOutputWithContext(context.Context) ECDeploymentElasticsearchConfigOutput
}

type ECDeploymentElasticsearchConfigArgs struct {
	Plugins                  pulumi.StringArrayInput `pulumi:"plugins"`
	UserSettingsJson         pulumi.StringPtrInput   `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson pulumi.StringPtrInput   `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml pulumi.StringPtrInput   `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         pulumi.StringPtrInput   `pulumi:"userSettingsYaml"`
}

func (ECDeploymentElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchConfig)(nil)).Elem()
}

func (i ECDeploymentElasticsearchConfigArgs) ToECDeploymentElasticsearchConfigOutput() ECDeploymentElasticsearchConfigOutput {
	return i.ToECDeploymentElasticsearchConfigOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchConfigArgs) ToECDeploymentElasticsearchConfigOutputWithContext(ctx context.Context) ECDeploymentElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchConfigOutput)
}

func (i ECDeploymentElasticsearchConfigArgs) ToECDeploymentElasticsearchConfigPtrOutput() ECDeploymentElasticsearchConfigPtrOutput {
	return i.ToECDeploymentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchConfigArgs) ToECDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchConfigOutput).ToECDeploymentElasticsearchConfigPtrOutputWithContext(ctx)
}

// ECDeploymentElasticsearchConfigPtrInput is an input type that accepts ECDeploymentElasticsearchConfigArgs, ECDeploymentElasticsearchConfigPtr and ECDeploymentElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchConfigPtrInput` via:
//
//          ECDeploymentElasticsearchConfigArgs{...}
//
//  or:
//
//          nil
type ECDeploymentElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchConfigPtrOutput() ECDeploymentElasticsearchConfigPtrOutput
	ToECDeploymentElasticsearchConfigPtrOutputWithContext(context.Context) ECDeploymentElasticsearchConfigPtrOutput
}

type ecdeploymentElasticsearchConfigPtrType ECDeploymentElasticsearchConfigArgs

func ECDeploymentElasticsearchConfigPtr(v *ECDeploymentElasticsearchConfigArgs) ECDeploymentElasticsearchConfigPtrInput {
	return (*ecdeploymentElasticsearchConfigPtrType)(v)
}

func (*ecdeploymentElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentElasticsearchConfig)(nil)).Elem()
}

func (i *ecdeploymentElasticsearchConfigPtrType) ToECDeploymentElasticsearchConfigPtrOutput() ECDeploymentElasticsearchConfigPtrOutput {
	return i.ToECDeploymentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentElasticsearchConfigPtrType) ToECDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchConfigPtrOutput)
}

type ECDeploymentElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchConfig)(nil)).Elem()
}

func (o ECDeploymentElasticsearchConfigOutput) ToECDeploymentElasticsearchConfigOutput() ECDeploymentElasticsearchConfigOutput {
	return o
}

func (o ECDeploymentElasticsearchConfigOutput) ToECDeploymentElasticsearchConfigOutputWithContext(ctx context.Context) ECDeploymentElasticsearchConfigOutput {
	return o
}

func (o ECDeploymentElasticsearchConfigOutput) ToECDeploymentElasticsearchConfigPtrOutput() ECDeploymentElasticsearchConfigPtrOutput {
	return o.ToECDeploymentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o ECDeploymentElasticsearchConfigOutput) ToECDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchConfig) *ECDeploymentElasticsearchConfig {
		return &v
	}).(ECDeploymentElasticsearchConfigPtrOutput)
}
func (o ECDeploymentElasticsearchConfigOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchConfig) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

func (o ECDeploymentElasticsearchConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type ECDeploymentElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentElasticsearchConfig)(nil)).Elem()
}

func (o ECDeploymentElasticsearchConfigPtrOutput) ToECDeploymentElasticsearchConfigPtrOutput() ECDeploymentElasticsearchConfigPtrOutput {
	return o
}

func (o ECDeploymentElasticsearchConfigPtrOutput) ToECDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchConfigPtrOutput {
	return o
}

func (o ECDeploymentElasticsearchConfigPtrOutput) Elem() ECDeploymentElasticsearchConfigOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchConfig) ECDeploymentElasticsearchConfig { return *v }).(ECDeploymentElasticsearchConfigOutput)
}

func (o ECDeploymentElasticsearchConfigPtrOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchConfig) []string {
		if v == nil {
			return nil
		}
		return v.Plugins
	}).(pulumi.StringArrayOutput)
}

func (o ECDeploymentElasticsearchConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type ECDeploymentElasticsearchExtension struct {
	Name    string `pulumi:"name"`
	Type    string `pulumi:"type"`
	Url     string `pulumi:"url"`
	Version string `pulumi:"version"`
}

// ECDeploymentElasticsearchExtensionInput is an input type that accepts ECDeploymentElasticsearchExtensionArgs and ECDeploymentElasticsearchExtensionOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchExtensionInput` via:
//
//          ECDeploymentElasticsearchExtensionArgs{...}
type ECDeploymentElasticsearchExtensionInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchExtensionOutput() ECDeploymentElasticsearchExtensionOutput
	ToECDeploymentElasticsearchExtensionOutputWithContext(context.Context) ECDeploymentElasticsearchExtensionOutput
}

type ECDeploymentElasticsearchExtensionArgs struct {
	Name    pulumi.StringInput `pulumi:"name"`
	Type    pulumi.StringInput `pulumi:"type"`
	Url     pulumi.StringInput `pulumi:"url"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (ECDeploymentElasticsearchExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchExtension)(nil)).Elem()
}

func (i ECDeploymentElasticsearchExtensionArgs) ToECDeploymentElasticsearchExtensionOutput() ECDeploymentElasticsearchExtensionOutput {
	return i.ToECDeploymentElasticsearchExtensionOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchExtensionArgs) ToECDeploymentElasticsearchExtensionOutputWithContext(ctx context.Context) ECDeploymentElasticsearchExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchExtensionOutput)
}

// ECDeploymentElasticsearchExtensionArrayInput is an input type that accepts ECDeploymentElasticsearchExtensionArray and ECDeploymentElasticsearchExtensionArrayOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchExtensionArrayInput` via:
//
//          ECDeploymentElasticsearchExtensionArray{ ECDeploymentElasticsearchExtensionArgs{...} }
type ECDeploymentElasticsearchExtensionArrayInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchExtensionArrayOutput() ECDeploymentElasticsearchExtensionArrayOutput
	ToECDeploymentElasticsearchExtensionArrayOutputWithContext(context.Context) ECDeploymentElasticsearchExtensionArrayOutput
}

type ECDeploymentElasticsearchExtensionArray []ECDeploymentElasticsearchExtensionInput

func (ECDeploymentElasticsearchExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentElasticsearchExtension)(nil)).Elem()
}

func (i ECDeploymentElasticsearchExtensionArray) ToECDeploymentElasticsearchExtensionArrayOutput() ECDeploymentElasticsearchExtensionArrayOutput {
	return i.ToECDeploymentElasticsearchExtensionArrayOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchExtensionArray) ToECDeploymentElasticsearchExtensionArrayOutputWithContext(ctx context.Context) ECDeploymentElasticsearchExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchExtensionArrayOutput)
}

type ECDeploymentElasticsearchExtensionOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchExtension)(nil)).Elem()
}

func (o ECDeploymentElasticsearchExtensionOutput) ToECDeploymentElasticsearchExtensionOutput() ECDeploymentElasticsearchExtensionOutput {
	return o
}

func (o ECDeploymentElasticsearchExtensionOutput) ToECDeploymentElasticsearchExtensionOutputWithContext(ctx context.Context) ECDeploymentElasticsearchExtensionOutput {
	return o
}

func (o ECDeploymentElasticsearchExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchExtension) string { return v.Name }).(pulumi.StringOutput)
}

func (o ECDeploymentElasticsearchExtensionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchExtension) string { return v.Type }).(pulumi.StringOutput)
}

func (o ECDeploymentElasticsearchExtensionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchExtension) string { return v.Url }).(pulumi.StringOutput)
}

func (o ECDeploymentElasticsearchExtensionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchExtension) string { return v.Version }).(pulumi.StringOutput)
}

type ECDeploymentElasticsearchExtensionArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentElasticsearchExtension)(nil)).Elem()
}

func (o ECDeploymentElasticsearchExtensionArrayOutput) ToECDeploymentElasticsearchExtensionArrayOutput() ECDeploymentElasticsearchExtensionArrayOutput {
	return o
}

func (o ECDeploymentElasticsearchExtensionArrayOutput) ToECDeploymentElasticsearchExtensionArrayOutputWithContext(ctx context.Context) ECDeploymentElasticsearchExtensionArrayOutput {
	return o
}

func (o ECDeploymentElasticsearchExtensionArrayOutput) Index(i pulumi.IntInput) ECDeploymentElasticsearchExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentElasticsearchExtension {
		return vs[0].([]ECDeploymentElasticsearchExtension)[vs[1].(int)]
	}).(ECDeploymentElasticsearchExtensionOutput)
}

type ECDeploymentElasticsearchRemoteCluster struct {
	Alias           *string `pulumi:"alias"`
	DeploymentId    string  `pulumi:"deploymentId"`
	RefId           *string `pulumi:"refId"`
	SkipUnavailable *bool   `pulumi:"skipUnavailable"`
}

// ECDeploymentElasticsearchRemoteClusterInput is an input type that accepts ECDeploymentElasticsearchRemoteClusterArgs and ECDeploymentElasticsearchRemoteClusterOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchRemoteClusterInput` via:
//
//          ECDeploymentElasticsearchRemoteClusterArgs{...}
type ECDeploymentElasticsearchRemoteClusterInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchRemoteClusterOutput() ECDeploymentElasticsearchRemoteClusterOutput
	ToECDeploymentElasticsearchRemoteClusterOutputWithContext(context.Context) ECDeploymentElasticsearchRemoteClusterOutput
}

type ECDeploymentElasticsearchRemoteClusterArgs struct {
	Alias           pulumi.StringPtrInput `pulumi:"alias"`
	DeploymentId    pulumi.StringInput    `pulumi:"deploymentId"`
	RefId           pulumi.StringPtrInput `pulumi:"refId"`
	SkipUnavailable pulumi.BoolPtrInput   `pulumi:"skipUnavailable"`
}

func (ECDeploymentElasticsearchRemoteClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (i ECDeploymentElasticsearchRemoteClusterArgs) ToECDeploymentElasticsearchRemoteClusterOutput() ECDeploymentElasticsearchRemoteClusterOutput {
	return i.ToECDeploymentElasticsearchRemoteClusterOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchRemoteClusterArgs) ToECDeploymentElasticsearchRemoteClusterOutputWithContext(ctx context.Context) ECDeploymentElasticsearchRemoteClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchRemoteClusterOutput)
}

// ECDeploymentElasticsearchRemoteClusterArrayInput is an input type that accepts ECDeploymentElasticsearchRemoteClusterArray and ECDeploymentElasticsearchRemoteClusterArrayOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchRemoteClusterArrayInput` via:
//
//          ECDeploymentElasticsearchRemoteClusterArray{ ECDeploymentElasticsearchRemoteClusterArgs{...} }
type ECDeploymentElasticsearchRemoteClusterArrayInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchRemoteClusterArrayOutput() ECDeploymentElasticsearchRemoteClusterArrayOutput
	ToECDeploymentElasticsearchRemoteClusterArrayOutputWithContext(context.Context) ECDeploymentElasticsearchRemoteClusterArrayOutput
}

type ECDeploymentElasticsearchRemoteClusterArray []ECDeploymentElasticsearchRemoteClusterInput

func (ECDeploymentElasticsearchRemoteClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (i ECDeploymentElasticsearchRemoteClusterArray) ToECDeploymentElasticsearchRemoteClusterArrayOutput() ECDeploymentElasticsearchRemoteClusterArrayOutput {
	return i.ToECDeploymentElasticsearchRemoteClusterArrayOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchRemoteClusterArray) ToECDeploymentElasticsearchRemoteClusterArrayOutputWithContext(ctx context.Context) ECDeploymentElasticsearchRemoteClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchRemoteClusterArrayOutput)
}

type ECDeploymentElasticsearchRemoteClusterOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchRemoteClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (o ECDeploymentElasticsearchRemoteClusterOutput) ToECDeploymentElasticsearchRemoteClusterOutput() ECDeploymentElasticsearchRemoteClusterOutput {
	return o
}

func (o ECDeploymentElasticsearchRemoteClusterOutput) ToECDeploymentElasticsearchRemoteClusterOutputWithContext(ctx context.Context) ECDeploymentElasticsearchRemoteClusterOutput {
	return o
}

func (o ECDeploymentElasticsearchRemoteClusterOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchRemoteCluster) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchRemoteClusterOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchRemoteCluster) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o ECDeploymentElasticsearchRemoteClusterOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchRemoteCluster) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchRemoteClusterOutput) SkipUnavailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchRemoteCluster) *bool { return v.SkipUnavailable }).(pulumi.BoolPtrOutput)
}

type ECDeploymentElasticsearchRemoteClusterArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchRemoteClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (o ECDeploymentElasticsearchRemoteClusterArrayOutput) ToECDeploymentElasticsearchRemoteClusterArrayOutput() ECDeploymentElasticsearchRemoteClusterArrayOutput {
	return o
}

func (o ECDeploymentElasticsearchRemoteClusterArrayOutput) ToECDeploymentElasticsearchRemoteClusterArrayOutputWithContext(ctx context.Context) ECDeploymentElasticsearchRemoteClusterArrayOutput {
	return o
}

func (o ECDeploymentElasticsearchRemoteClusterArrayOutput) Index(i pulumi.IntInput) ECDeploymentElasticsearchRemoteClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentElasticsearchRemoteCluster {
		return vs[0].([]ECDeploymentElasticsearchRemoteCluster)[vs[1].(int)]
	}).(ECDeploymentElasticsearchRemoteClusterOutput)
}

type ECDeploymentElasticsearchSnapshotSource struct {
	SnapshotName                 *string `pulumi:"snapshotName"`
	SourceElasticsearchClusterId string  `pulumi:"sourceElasticsearchClusterId"`
}

// ECDeploymentElasticsearchSnapshotSourceInput is an input type that accepts ECDeploymentElasticsearchSnapshotSourceArgs and ECDeploymentElasticsearchSnapshotSourceOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchSnapshotSourceInput` via:
//
//          ECDeploymentElasticsearchSnapshotSourceArgs{...}
type ECDeploymentElasticsearchSnapshotSourceInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchSnapshotSourceOutput() ECDeploymentElasticsearchSnapshotSourceOutput
	ToECDeploymentElasticsearchSnapshotSourceOutputWithContext(context.Context) ECDeploymentElasticsearchSnapshotSourceOutput
}

type ECDeploymentElasticsearchSnapshotSourceArgs struct {
	SnapshotName                 pulumi.StringPtrInput `pulumi:"snapshotName"`
	SourceElasticsearchClusterId pulumi.StringInput    `pulumi:"sourceElasticsearchClusterId"`
}

func (ECDeploymentElasticsearchSnapshotSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (i ECDeploymentElasticsearchSnapshotSourceArgs) ToECDeploymentElasticsearchSnapshotSourceOutput() ECDeploymentElasticsearchSnapshotSourceOutput {
	return i.ToECDeploymentElasticsearchSnapshotSourceOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchSnapshotSourceArgs) ToECDeploymentElasticsearchSnapshotSourceOutputWithContext(ctx context.Context) ECDeploymentElasticsearchSnapshotSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchSnapshotSourceOutput)
}

func (i ECDeploymentElasticsearchSnapshotSourceArgs) ToECDeploymentElasticsearchSnapshotSourcePtrOutput() ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return i.ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchSnapshotSourceArgs) ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchSnapshotSourceOutput).ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx)
}

// ECDeploymentElasticsearchSnapshotSourcePtrInput is an input type that accepts ECDeploymentElasticsearchSnapshotSourceArgs, ECDeploymentElasticsearchSnapshotSourcePtr and ECDeploymentElasticsearchSnapshotSourcePtrOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchSnapshotSourcePtrInput` via:
//
//          ECDeploymentElasticsearchSnapshotSourceArgs{...}
//
//  or:
//
//          nil
type ECDeploymentElasticsearchSnapshotSourcePtrInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchSnapshotSourcePtrOutput() ECDeploymentElasticsearchSnapshotSourcePtrOutput
	ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Context) ECDeploymentElasticsearchSnapshotSourcePtrOutput
}

type ecdeploymentElasticsearchSnapshotSourcePtrType ECDeploymentElasticsearchSnapshotSourceArgs

func ECDeploymentElasticsearchSnapshotSourcePtr(v *ECDeploymentElasticsearchSnapshotSourceArgs) ECDeploymentElasticsearchSnapshotSourcePtrInput {
	return (*ecdeploymentElasticsearchSnapshotSourcePtrType)(v)
}

func (*ecdeploymentElasticsearchSnapshotSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (i *ecdeploymentElasticsearchSnapshotSourcePtrType) ToECDeploymentElasticsearchSnapshotSourcePtrOutput() ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return i.ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Background())
}

func (i *ecdeploymentElasticsearchSnapshotSourcePtrType) ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchSnapshotSourcePtrOutput)
}

type ECDeploymentElasticsearchSnapshotSourceOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchSnapshotSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (o ECDeploymentElasticsearchSnapshotSourceOutput) ToECDeploymentElasticsearchSnapshotSourceOutput() ECDeploymentElasticsearchSnapshotSourceOutput {
	return o
}

func (o ECDeploymentElasticsearchSnapshotSourceOutput) ToECDeploymentElasticsearchSnapshotSourceOutputWithContext(ctx context.Context) ECDeploymentElasticsearchSnapshotSourceOutput {
	return o
}

func (o ECDeploymentElasticsearchSnapshotSourceOutput) ToECDeploymentElasticsearchSnapshotSourcePtrOutput() ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Background())
}

func (o ECDeploymentElasticsearchSnapshotSourceOutput) ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchSnapshotSource) *ECDeploymentElasticsearchSnapshotSource {
		return &v
	}).(ECDeploymentElasticsearchSnapshotSourcePtrOutput)
}
func (o ECDeploymentElasticsearchSnapshotSourceOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchSnapshotSource) *string { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchSnapshotSourceOutput) SourceElasticsearchClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchSnapshotSource) string { return v.SourceElasticsearchClusterId }).(pulumi.StringOutput)
}

type ECDeploymentElasticsearchSnapshotSourcePtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchSnapshotSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (o ECDeploymentElasticsearchSnapshotSourcePtrOutput) ToECDeploymentElasticsearchSnapshotSourcePtrOutput() ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return o
}

func (o ECDeploymentElasticsearchSnapshotSourcePtrOutput) ToECDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) ECDeploymentElasticsearchSnapshotSourcePtrOutput {
	return o
}

func (o ECDeploymentElasticsearchSnapshotSourcePtrOutput) Elem() ECDeploymentElasticsearchSnapshotSourceOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchSnapshotSource) ECDeploymentElasticsearchSnapshotSource { return *v }).(ECDeploymentElasticsearchSnapshotSourceOutput)
}

func (o ECDeploymentElasticsearchSnapshotSourcePtrOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchSnapshotSource) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotName
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchSnapshotSourcePtrOutput) SourceElasticsearchClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentElasticsearchSnapshotSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceElasticsearchClusterId
	}).(pulumi.StringPtrOutput)
}

type ECDeploymentElasticsearchTopology struct {
	Id                      string   `pulumi:"id"`
	InstanceConfigurationId *string  `pulumi:"instanceConfigurationId"`
	NodeRoles               []string `pulumi:"nodeRoles"`
	NodeTypeData            *string  `pulumi:"nodeTypeData"`
	NodeTypeIngest          *string  `pulumi:"nodeTypeIngest"`
	NodeTypeMaster          *string  `pulumi:"nodeTypeMaster"`
	NodeTypeMl              *string  `pulumi:"nodeTypeMl"`
	Size                    *string  `pulumi:"size"`
	SizeResource            *string  `pulumi:"sizeResource"`
	ZoneCount               *int     `pulumi:"zoneCount"`
}

// ECDeploymentElasticsearchTopologyInput is an input type that accepts ECDeploymentElasticsearchTopologyArgs and ECDeploymentElasticsearchTopologyOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchTopologyInput` via:
//
//          ECDeploymentElasticsearchTopologyArgs{...}
type ECDeploymentElasticsearchTopologyInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchTopologyOutput() ECDeploymentElasticsearchTopologyOutput
	ToECDeploymentElasticsearchTopologyOutputWithContext(context.Context) ECDeploymentElasticsearchTopologyOutput
}

type ECDeploymentElasticsearchTopologyArgs struct {
	Id                      pulumi.StringInput      `pulumi:"id"`
	InstanceConfigurationId pulumi.StringPtrInput   `pulumi:"instanceConfigurationId"`
	NodeRoles               pulumi.StringArrayInput `pulumi:"nodeRoles"`
	NodeTypeData            pulumi.StringPtrInput   `pulumi:"nodeTypeData"`
	NodeTypeIngest          pulumi.StringPtrInput   `pulumi:"nodeTypeIngest"`
	NodeTypeMaster          pulumi.StringPtrInput   `pulumi:"nodeTypeMaster"`
	NodeTypeMl              pulumi.StringPtrInput   `pulumi:"nodeTypeMl"`
	Size                    pulumi.StringPtrInput   `pulumi:"size"`
	SizeResource            pulumi.StringPtrInput   `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntPtrInput      `pulumi:"zoneCount"`
}

func (ECDeploymentElasticsearchTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (i ECDeploymentElasticsearchTopologyArgs) ToECDeploymentElasticsearchTopologyOutput() ECDeploymentElasticsearchTopologyOutput {
	return i.ToECDeploymentElasticsearchTopologyOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchTopologyArgs) ToECDeploymentElasticsearchTopologyOutputWithContext(ctx context.Context) ECDeploymentElasticsearchTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchTopologyOutput)
}

// ECDeploymentElasticsearchTopologyArrayInput is an input type that accepts ECDeploymentElasticsearchTopologyArray and ECDeploymentElasticsearchTopologyArrayOutput values.
// You can construct a concrete instance of `ECDeploymentElasticsearchTopologyArrayInput` via:
//
//          ECDeploymentElasticsearchTopologyArray{ ECDeploymentElasticsearchTopologyArgs{...} }
type ECDeploymentElasticsearchTopologyArrayInput interface {
	pulumi.Input

	ToECDeploymentElasticsearchTopologyArrayOutput() ECDeploymentElasticsearchTopologyArrayOutput
	ToECDeploymentElasticsearchTopologyArrayOutputWithContext(context.Context) ECDeploymentElasticsearchTopologyArrayOutput
}

type ECDeploymentElasticsearchTopologyArray []ECDeploymentElasticsearchTopologyInput

func (ECDeploymentElasticsearchTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (i ECDeploymentElasticsearchTopologyArray) ToECDeploymentElasticsearchTopologyArrayOutput() ECDeploymentElasticsearchTopologyArrayOutput {
	return i.ToECDeploymentElasticsearchTopologyArrayOutputWithContext(context.Background())
}

func (i ECDeploymentElasticsearchTopologyArray) ToECDeploymentElasticsearchTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentElasticsearchTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentElasticsearchTopologyArrayOutput)
}

type ECDeploymentElasticsearchTopologyOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (o ECDeploymentElasticsearchTopologyOutput) ToECDeploymentElasticsearchTopologyOutput() ECDeploymentElasticsearchTopologyOutput {
	return o
}

func (o ECDeploymentElasticsearchTopologyOutput) ToECDeploymentElasticsearchTopologyOutputWithContext(ctx context.Context) ECDeploymentElasticsearchTopologyOutput {
	return o
}

func (o ECDeploymentElasticsearchTopologyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) string { return v.Id }).(pulumi.StringOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentElasticsearchTopologyOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ECDeploymentElasticsearchTopology) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type ECDeploymentElasticsearchTopologyArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentElasticsearchTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (o ECDeploymentElasticsearchTopologyArrayOutput) ToECDeploymentElasticsearchTopologyArrayOutput() ECDeploymentElasticsearchTopologyArrayOutput {
	return o
}

func (o ECDeploymentElasticsearchTopologyArrayOutput) ToECDeploymentElasticsearchTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentElasticsearchTopologyArrayOutput {
	return o
}

func (o ECDeploymentElasticsearchTopologyArrayOutput) Index(i pulumi.IntInput) ECDeploymentElasticsearchTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentElasticsearchTopology {
		return vs[0].([]ECDeploymentElasticsearchTopology)[vs[1].(int)]
	}).(ECDeploymentElasticsearchTopologyOutput)
}

type ECDeploymentEnterpriseSearch struct {
	Config                    *ECDeploymentEnterpriseSearchConfig    `pulumi:"config"`
	ElasticsearchClusterRefId *string                                `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              *string                                `pulumi:"httpEndpoint"`
	HttpsEndpoint             *string                                `pulumi:"httpsEndpoint"`
	RefId                     *string                                `pulumi:"refId"`
	Region                    *string                                `pulumi:"region"`
	ResourceId                *string                                `pulumi:"resourceId"`
	Topologies                []ECDeploymentEnterpriseSearchTopology `pulumi:"topologies"`
}

// ECDeploymentEnterpriseSearchInput is an input type that accepts ECDeploymentEnterpriseSearchArgs and ECDeploymentEnterpriseSearchOutput values.
// You can construct a concrete instance of `ECDeploymentEnterpriseSearchInput` via:
//
//          ECDeploymentEnterpriseSearchArgs{...}
type ECDeploymentEnterpriseSearchInput interface {
	pulumi.Input

	ToECDeploymentEnterpriseSearchOutput() ECDeploymentEnterpriseSearchOutput
	ToECDeploymentEnterpriseSearchOutputWithContext(context.Context) ECDeploymentEnterpriseSearchOutput
}

type ECDeploymentEnterpriseSearchArgs struct {
	Config                    ECDeploymentEnterpriseSearchConfigPtrInput     `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput                          `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              pulumi.StringPtrInput                          `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringPtrInput                          `pulumi:"httpsEndpoint"`
	RefId                     pulumi.StringPtrInput                          `pulumi:"refId"`
	Region                    pulumi.StringPtrInput                          `pulumi:"region"`
	ResourceId                pulumi.StringPtrInput                          `pulumi:"resourceId"`
	Topologies                ECDeploymentEnterpriseSearchTopologyArrayInput `pulumi:"topologies"`
}

func (ECDeploymentEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (i ECDeploymentEnterpriseSearchArgs) ToECDeploymentEnterpriseSearchOutput() ECDeploymentEnterpriseSearchOutput {
	return i.ToECDeploymentEnterpriseSearchOutputWithContext(context.Background())
}

func (i ECDeploymentEnterpriseSearchArgs) ToECDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchOutput)
}

func (i ECDeploymentEnterpriseSearchArgs) ToECDeploymentEnterpriseSearchPtrOutput() ECDeploymentEnterpriseSearchPtrOutput {
	return i.ToECDeploymentEnterpriseSearchPtrOutputWithContext(context.Background())
}

func (i ECDeploymentEnterpriseSearchArgs) ToECDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchOutput).ToECDeploymentEnterpriseSearchPtrOutputWithContext(ctx)
}

// ECDeploymentEnterpriseSearchPtrInput is an input type that accepts ECDeploymentEnterpriseSearchArgs, ECDeploymentEnterpriseSearchPtr and ECDeploymentEnterpriseSearchPtrOutput values.
// You can construct a concrete instance of `ECDeploymentEnterpriseSearchPtrInput` via:
//
//          ECDeploymentEnterpriseSearchArgs{...}
//
//  or:
//
//          nil
type ECDeploymentEnterpriseSearchPtrInput interface {
	pulumi.Input

	ToECDeploymentEnterpriseSearchPtrOutput() ECDeploymentEnterpriseSearchPtrOutput
	ToECDeploymentEnterpriseSearchPtrOutputWithContext(context.Context) ECDeploymentEnterpriseSearchPtrOutput
}

type ecdeploymentEnterpriseSearchPtrType ECDeploymentEnterpriseSearchArgs

func ECDeploymentEnterpriseSearchPtr(v *ECDeploymentEnterpriseSearchArgs) ECDeploymentEnterpriseSearchPtrInput {
	return (*ecdeploymentEnterpriseSearchPtrType)(v)
}

func (*ecdeploymentEnterpriseSearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (i *ecdeploymentEnterpriseSearchPtrType) ToECDeploymentEnterpriseSearchPtrOutput() ECDeploymentEnterpriseSearchPtrOutput {
	return i.ToECDeploymentEnterpriseSearchPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentEnterpriseSearchPtrType) ToECDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchPtrOutput)
}

type ECDeploymentEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (ECDeploymentEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (o ECDeploymentEnterpriseSearchOutput) ToECDeploymentEnterpriseSearchOutput() ECDeploymentEnterpriseSearchOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchOutput) ToECDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchOutput) ToECDeploymentEnterpriseSearchPtrOutput() ECDeploymentEnterpriseSearchPtrOutput {
	return o.ToECDeploymentEnterpriseSearchPtrOutputWithContext(context.Background())
}

func (o ECDeploymentEnterpriseSearchOutput) ToECDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *ECDeploymentEnterpriseSearch {
		return &v
	}).(ECDeploymentEnterpriseSearchPtrOutput)
}
func (o ECDeploymentEnterpriseSearchOutput) Config() ECDeploymentEnterpriseSearchConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *ECDeploymentEnterpriseSearchConfig { return v.Config }).(ECDeploymentEnterpriseSearchConfigPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchOutput) Topologies() ECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearch) []ECDeploymentEnterpriseSearchTopology { return v.Topologies }).(ECDeploymentEnterpriseSearchTopologyArrayOutput)
}

type ECDeploymentEnterpriseSearchPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentEnterpriseSearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (o ECDeploymentEnterpriseSearchPtrOutput) ToECDeploymentEnterpriseSearchPtrOutput() ECDeploymentEnterpriseSearchPtrOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchPtrOutput) ToECDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchPtrOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchPtrOutput) Elem() ECDeploymentEnterpriseSearchOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) ECDeploymentEnterpriseSearch { return *v }).(ECDeploymentEnterpriseSearchOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) Config() ECDeploymentEnterpriseSearchConfigPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *ECDeploymentEnterpriseSearchConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(ECDeploymentEnterpriseSearchConfigPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchPtrOutput) Topologies() ECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearch) []ECDeploymentEnterpriseSearchTopology {
		if v == nil {
			return nil
		}
		return v.Topologies
	}).(ECDeploymentEnterpriseSearchTopologyArrayOutput)
}

type ECDeploymentEnterpriseSearchConfig struct {
	UserSettingsJson         *string `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         *string `pulumi:"userSettingsYaml"`
}

// ECDeploymentEnterpriseSearchConfigInput is an input type that accepts ECDeploymentEnterpriseSearchConfigArgs and ECDeploymentEnterpriseSearchConfigOutput values.
// You can construct a concrete instance of `ECDeploymentEnterpriseSearchConfigInput` via:
//
//          ECDeploymentEnterpriseSearchConfigArgs{...}
type ECDeploymentEnterpriseSearchConfigInput interface {
	pulumi.Input

	ToECDeploymentEnterpriseSearchConfigOutput() ECDeploymentEnterpriseSearchConfigOutput
	ToECDeploymentEnterpriseSearchConfigOutputWithContext(context.Context) ECDeploymentEnterpriseSearchConfigOutput
}

type ECDeploymentEnterpriseSearchConfigArgs struct {
	UserSettingsJson         pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (ECDeploymentEnterpriseSearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (i ECDeploymentEnterpriseSearchConfigArgs) ToECDeploymentEnterpriseSearchConfigOutput() ECDeploymentEnterpriseSearchConfigOutput {
	return i.ToECDeploymentEnterpriseSearchConfigOutputWithContext(context.Background())
}

func (i ECDeploymentEnterpriseSearchConfigArgs) ToECDeploymentEnterpriseSearchConfigOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchConfigOutput)
}

func (i ECDeploymentEnterpriseSearchConfigArgs) ToECDeploymentEnterpriseSearchConfigPtrOutput() ECDeploymentEnterpriseSearchConfigPtrOutput {
	return i.ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Background())
}

func (i ECDeploymentEnterpriseSearchConfigArgs) ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchConfigOutput).ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx)
}

// ECDeploymentEnterpriseSearchConfigPtrInput is an input type that accepts ECDeploymentEnterpriseSearchConfigArgs, ECDeploymentEnterpriseSearchConfigPtr and ECDeploymentEnterpriseSearchConfigPtrOutput values.
// You can construct a concrete instance of `ECDeploymentEnterpriseSearchConfigPtrInput` via:
//
//          ECDeploymentEnterpriseSearchConfigArgs{...}
//
//  or:
//
//          nil
type ECDeploymentEnterpriseSearchConfigPtrInput interface {
	pulumi.Input

	ToECDeploymentEnterpriseSearchConfigPtrOutput() ECDeploymentEnterpriseSearchConfigPtrOutput
	ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Context) ECDeploymentEnterpriseSearchConfigPtrOutput
}

type ecdeploymentEnterpriseSearchConfigPtrType ECDeploymentEnterpriseSearchConfigArgs

func ECDeploymentEnterpriseSearchConfigPtr(v *ECDeploymentEnterpriseSearchConfigArgs) ECDeploymentEnterpriseSearchConfigPtrInput {
	return (*ecdeploymentEnterpriseSearchConfigPtrType)(v)
}

func (*ecdeploymentEnterpriseSearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (i *ecdeploymentEnterpriseSearchConfigPtrType) ToECDeploymentEnterpriseSearchConfigPtrOutput() ECDeploymentEnterpriseSearchConfigPtrOutput {
	return i.ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentEnterpriseSearchConfigPtrType) ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchConfigPtrOutput)
}

type ECDeploymentEnterpriseSearchConfigOutput struct{ *pulumi.OutputState }

func (ECDeploymentEnterpriseSearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (o ECDeploymentEnterpriseSearchConfigOutput) ToECDeploymentEnterpriseSearchConfigOutput() ECDeploymentEnterpriseSearchConfigOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchConfigOutput) ToECDeploymentEnterpriseSearchConfigOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchConfigOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchConfigOutput) ToECDeploymentEnterpriseSearchConfigPtrOutput() ECDeploymentEnterpriseSearchConfigPtrOutput {
	return o.ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Background())
}

func (o ECDeploymentEnterpriseSearchConfigOutput) ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchConfig) *ECDeploymentEnterpriseSearchConfig {
		return &v
	}).(ECDeploymentEnterpriseSearchConfigPtrOutput)
}
func (o ECDeploymentEnterpriseSearchConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type ECDeploymentEnterpriseSearchConfigPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentEnterpriseSearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) ToECDeploymentEnterpriseSearchConfigPtrOutput() ECDeploymentEnterpriseSearchConfigPtrOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) ToECDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchConfigPtrOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) Elem() ECDeploymentEnterpriseSearchConfigOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearchConfig) ECDeploymentEnterpriseSearchConfig { return *v }).(ECDeploymentEnterpriseSearchConfigOutput)
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type ECDeploymentEnterpriseSearchTopology struct {
	InstanceConfigurationId *string `pulumi:"instanceConfigurationId"`
	NodeTypeAppserver       *bool   `pulumi:"nodeTypeAppserver"`
	NodeTypeConnector       *bool   `pulumi:"nodeTypeConnector"`
	NodeTypeWorker          *bool   `pulumi:"nodeTypeWorker"`
	Size                    *string `pulumi:"size"`
	SizeResource            *string `pulumi:"sizeResource"`
	ZoneCount               *int    `pulumi:"zoneCount"`
}

// ECDeploymentEnterpriseSearchTopologyInput is an input type that accepts ECDeploymentEnterpriseSearchTopologyArgs and ECDeploymentEnterpriseSearchTopologyOutput values.
// You can construct a concrete instance of `ECDeploymentEnterpriseSearchTopologyInput` via:
//
//          ECDeploymentEnterpriseSearchTopologyArgs{...}
type ECDeploymentEnterpriseSearchTopologyInput interface {
	pulumi.Input

	ToECDeploymentEnterpriseSearchTopologyOutput() ECDeploymentEnterpriseSearchTopologyOutput
	ToECDeploymentEnterpriseSearchTopologyOutputWithContext(context.Context) ECDeploymentEnterpriseSearchTopologyOutput
}

type ECDeploymentEnterpriseSearchTopologyArgs struct {
	InstanceConfigurationId pulumi.StringPtrInput `pulumi:"instanceConfigurationId"`
	NodeTypeAppserver       pulumi.BoolPtrInput   `pulumi:"nodeTypeAppserver"`
	NodeTypeConnector       pulumi.BoolPtrInput   `pulumi:"nodeTypeConnector"`
	NodeTypeWorker          pulumi.BoolPtrInput   `pulumi:"nodeTypeWorker"`
	Size                    pulumi.StringPtrInput `pulumi:"size"`
	SizeResource            pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (ECDeploymentEnterpriseSearchTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (i ECDeploymentEnterpriseSearchTopologyArgs) ToECDeploymentEnterpriseSearchTopologyOutput() ECDeploymentEnterpriseSearchTopologyOutput {
	return i.ToECDeploymentEnterpriseSearchTopologyOutputWithContext(context.Background())
}

func (i ECDeploymentEnterpriseSearchTopologyArgs) ToECDeploymentEnterpriseSearchTopologyOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchTopologyOutput)
}

// ECDeploymentEnterpriseSearchTopologyArrayInput is an input type that accepts ECDeploymentEnterpriseSearchTopologyArray and ECDeploymentEnterpriseSearchTopologyArrayOutput values.
// You can construct a concrete instance of `ECDeploymentEnterpriseSearchTopologyArrayInput` via:
//
//          ECDeploymentEnterpriseSearchTopologyArray{ ECDeploymentEnterpriseSearchTopologyArgs{...} }
type ECDeploymentEnterpriseSearchTopologyArrayInput interface {
	pulumi.Input

	ToECDeploymentEnterpriseSearchTopologyArrayOutput() ECDeploymentEnterpriseSearchTopologyArrayOutput
	ToECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(context.Context) ECDeploymentEnterpriseSearchTopologyArrayOutput
}

type ECDeploymentEnterpriseSearchTopologyArray []ECDeploymentEnterpriseSearchTopologyInput

func (ECDeploymentEnterpriseSearchTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (i ECDeploymentEnterpriseSearchTopologyArray) ToECDeploymentEnterpriseSearchTopologyArrayOutput() ECDeploymentEnterpriseSearchTopologyArrayOutput {
	return i.ToECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(context.Background())
}

func (i ECDeploymentEnterpriseSearchTopologyArray) ToECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentEnterpriseSearchTopologyArrayOutput)
}

type ECDeploymentEnterpriseSearchTopologyOutput struct{ *pulumi.OutputState }

func (ECDeploymentEnterpriseSearchTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) ToECDeploymentEnterpriseSearchTopologyOutput() ECDeploymentEnterpriseSearchTopologyOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) ToECDeploymentEnterpriseSearchTopologyOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchTopologyOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) NodeTypeAppserver() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *bool { return v.NodeTypeAppserver }).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) NodeTypeConnector() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *bool { return v.NodeTypeConnector }).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) NodeTypeWorker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *bool { return v.NodeTypeWorker }).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentEnterpriseSearchTopologyOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ECDeploymentEnterpriseSearchTopology) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type ECDeploymentEnterpriseSearchTopologyArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentEnterpriseSearchTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (o ECDeploymentEnterpriseSearchTopologyArrayOutput) ToECDeploymentEnterpriseSearchTopologyArrayOutput() ECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchTopologyArrayOutput) ToECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o
}

func (o ECDeploymentEnterpriseSearchTopologyArrayOutput) Index(i pulumi.IntInput) ECDeploymentEnterpriseSearchTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentEnterpriseSearchTopology {
		return vs[0].([]ECDeploymentEnterpriseSearchTopology)[vs[1].(int)]
	}).(ECDeploymentEnterpriseSearchTopologyOutput)
}

type ECDeploymentKibana struct {
	Config                    *ECDeploymentKibanaConfig    `pulumi:"config"`
	ElasticsearchClusterRefId *string                      `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              *string                      `pulumi:"httpEndpoint"`
	HttpsEndpoint             *string                      `pulumi:"httpsEndpoint"`
	RefId                     *string                      `pulumi:"refId"`
	Region                    *string                      `pulumi:"region"`
	ResourceId                *string                      `pulumi:"resourceId"`
	Topologies                []ECDeploymentKibanaTopology `pulumi:"topologies"`
}

// ECDeploymentKibanaInput is an input type that accepts ECDeploymentKibanaArgs and ECDeploymentKibanaOutput values.
// You can construct a concrete instance of `ECDeploymentKibanaInput` via:
//
//          ECDeploymentKibanaArgs{...}
type ECDeploymentKibanaInput interface {
	pulumi.Input

	ToECDeploymentKibanaOutput() ECDeploymentKibanaOutput
	ToECDeploymentKibanaOutputWithContext(context.Context) ECDeploymentKibanaOutput
}

type ECDeploymentKibanaArgs struct {
	Config                    ECDeploymentKibanaConfigPtrInput     `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput                `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              pulumi.StringPtrInput                `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringPtrInput                `pulumi:"httpsEndpoint"`
	RefId                     pulumi.StringPtrInput                `pulumi:"refId"`
	Region                    pulumi.StringPtrInput                `pulumi:"region"`
	ResourceId                pulumi.StringPtrInput                `pulumi:"resourceId"`
	Topologies                ECDeploymentKibanaTopologyArrayInput `pulumi:"topologies"`
}

func (ECDeploymentKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentKibana)(nil)).Elem()
}

func (i ECDeploymentKibanaArgs) ToECDeploymentKibanaOutput() ECDeploymentKibanaOutput {
	return i.ToECDeploymentKibanaOutputWithContext(context.Background())
}

func (i ECDeploymentKibanaArgs) ToECDeploymentKibanaOutputWithContext(ctx context.Context) ECDeploymentKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaOutput)
}

func (i ECDeploymentKibanaArgs) ToECDeploymentKibanaPtrOutput() ECDeploymentKibanaPtrOutput {
	return i.ToECDeploymentKibanaPtrOutputWithContext(context.Background())
}

func (i ECDeploymentKibanaArgs) ToECDeploymentKibanaPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaOutput).ToECDeploymentKibanaPtrOutputWithContext(ctx)
}

// ECDeploymentKibanaPtrInput is an input type that accepts ECDeploymentKibanaArgs, ECDeploymentKibanaPtr and ECDeploymentKibanaPtrOutput values.
// You can construct a concrete instance of `ECDeploymentKibanaPtrInput` via:
//
//          ECDeploymentKibanaArgs{...}
//
//  or:
//
//          nil
type ECDeploymentKibanaPtrInput interface {
	pulumi.Input

	ToECDeploymentKibanaPtrOutput() ECDeploymentKibanaPtrOutput
	ToECDeploymentKibanaPtrOutputWithContext(context.Context) ECDeploymentKibanaPtrOutput
}

type ecdeploymentKibanaPtrType ECDeploymentKibanaArgs

func ECDeploymentKibanaPtr(v *ECDeploymentKibanaArgs) ECDeploymentKibanaPtrInput {
	return (*ecdeploymentKibanaPtrType)(v)
}

func (*ecdeploymentKibanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentKibana)(nil)).Elem()
}

func (i *ecdeploymentKibanaPtrType) ToECDeploymentKibanaPtrOutput() ECDeploymentKibanaPtrOutput {
	return i.ToECDeploymentKibanaPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentKibanaPtrType) ToECDeploymentKibanaPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaPtrOutput)
}

type ECDeploymentKibanaOutput struct{ *pulumi.OutputState }

func (ECDeploymentKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentKibana)(nil)).Elem()
}

func (o ECDeploymentKibanaOutput) ToECDeploymentKibanaOutput() ECDeploymentKibanaOutput {
	return o
}

func (o ECDeploymentKibanaOutput) ToECDeploymentKibanaOutputWithContext(ctx context.Context) ECDeploymentKibanaOutput {
	return o
}

func (o ECDeploymentKibanaOutput) ToECDeploymentKibanaPtrOutput() ECDeploymentKibanaPtrOutput {
	return o.ToECDeploymentKibanaPtrOutputWithContext(context.Background())
}

func (o ECDeploymentKibanaOutput) ToECDeploymentKibanaPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *ECDeploymentKibana {
		return &v
	}).(ECDeploymentKibanaPtrOutput)
}
func (o ECDeploymentKibanaOutput) Config() ECDeploymentKibanaConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *ECDeploymentKibanaConfig { return v.Config }).(ECDeploymentKibanaConfigPtrOutput)
}

func (o ECDeploymentKibanaOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibana) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaOutput) Topologies() ECDeploymentKibanaTopologyArrayOutput {
	return o.ApplyT(func(v ECDeploymentKibana) []ECDeploymentKibanaTopology { return v.Topologies }).(ECDeploymentKibanaTopologyArrayOutput)
}

type ECDeploymentKibanaPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentKibanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentKibana)(nil)).Elem()
}

func (o ECDeploymentKibanaPtrOutput) ToECDeploymentKibanaPtrOutput() ECDeploymentKibanaPtrOutput {
	return o
}

func (o ECDeploymentKibanaPtrOutput) ToECDeploymentKibanaPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaPtrOutput {
	return o
}

func (o ECDeploymentKibanaPtrOutput) Elem() ECDeploymentKibanaOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) ECDeploymentKibana { return *v }).(ECDeploymentKibanaOutput)
}

func (o ECDeploymentKibanaPtrOutput) Config() ECDeploymentKibanaConfigPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *ECDeploymentKibanaConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(ECDeploymentKibanaConfigPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaPtrOutput) Topologies() ECDeploymentKibanaTopologyArrayOutput {
	return o.ApplyT(func(v *ECDeploymentKibana) []ECDeploymentKibanaTopology {
		if v == nil {
			return nil
		}
		return v.Topologies
	}).(ECDeploymentKibanaTopologyArrayOutput)
}

type ECDeploymentKibanaConfig struct {
	UserSettingsJson         *string `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         *string `pulumi:"userSettingsYaml"`
}

// ECDeploymentKibanaConfigInput is an input type that accepts ECDeploymentKibanaConfigArgs and ECDeploymentKibanaConfigOutput values.
// You can construct a concrete instance of `ECDeploymentKibanaConfigInput` via:
//
//          ECDeploymentKibanaConfigArgs{...}
type ECDeploymentKibanaConfigInput interface {
	pulumi.Input

	ToECDeploymentKibanaConfigOutput() ECDeploymentKibanaConfigOutput
	ToECDeploymentKibanaConfigOutputWithContext(context.Context) ECDeploymentKibanaConfigOutput
}

type ECDeploymentKibanaConfigArgs struct {
	UserSettingsJson         pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	UserSettingsYaml         pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (ECDeploymentKibanaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentKibanaConfig)(nil)).Elem()
}

func (i ECDeploymentKibanaConfigArgs) ToECDeploymentKibanaConfigOutput() ECDeploymentKibanaConfigOutput {
	return i.ToECDeploymentKibanaConfigOutputWithContext(context.Background())
}

func (i ECDeploymentKibanaConfigArgs) ToECDeploymentKibanaConfigOutputWithContext(ctx context.Context) ECDeploymentKibanaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaConfigOutput)
}

func (i ECDeploymentKibanaConfigArgs) ToECDeploymentKibanaConfigPtrOutput() ECDeploymentKibanaConfigPtrOutput {
	return i.ToECDeploymentKibanaConfigPtrOutputWithContext(context.Background())
}

func (i ECDeploymentKibanaConfigArgs) ToECDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaConfigOutput).ToECDeploymentKibanaConfigPtrOutputWithContext(ctx)
}

// ECDeploymentKibanaConfigPtrInput is an input type that accepts ECDeploymentKibanaConfigArgs, ECDeploymentKibanaConfigPtr and ECDeploymentKibanaConfigPtrOutput values.
// You can construct a concrete instance of `ECDeploymentKibanaConfigPtrInput` via:
//
//          ECDeploymentKibanaConfigArgs{...}
//
//  or:
//
//          nil
type ECDeploymentKibanaConfigPtrInput interface {
	pulumi.Input

	ToECDeploymentKibanaConfigPtrOutput() ECDeploymentKibanaConfigPtrOutput
	ToECDeploymentKibanaConfigPtrOutputWithContext(context.Context) ECDeploymentKibanaConfigPtrOutput
}

type ecdeploymentKibanaConfigPtrType ECDeploymentKibanaConfigArgs

func ECDeploymentKibanaConfigPtr(v *ECDeploymentKibanaConfigArgs) ECDeploymentKibanaConfigPtrInput {
	return (*ecdeploymentKibanaConfigPtrType)(v)
}

func (*ecdeploymentKibanaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentKibanaConfig)(nil)).Elem()
}

func (i *ecdeploymentKibanaConfigPtrType) ToECDeploymentKibanaConfigPtrOutput() ECDeploymentKibanaConfigPtrOutput {
	return i.ToECDeploymentKibanaConfigPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentKibanaConfigPtrType) ToECDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaConfigPtrOutput)
}

type ECDeploymentKibanaConfigOutput struct{ *pulumi.OutputState }

func (ECDeploymentKibanaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentKibanaConfig)(nil)).Elem()
}

func (o ECDeploymentKibanaConfigOutput) ToECDeploymentKibanaConfigOutput() ECDeploymentKibanaConfigOutput {
	return o
}

func (o ECDeploymentKibanaConfigOutput) ToECDeploymentKibanaConfigOutputWithContext(ctx context.Context) ECDeploymentKibanaConfigOutput {
	return o
}

func (o ECDeploymentKibanaConfigOutput) ToECDeploymentKibanaConfigPtrOutput() ECDeploymentKibanaConfigPtrOutput {
	return o.ToECDeploymentKibanaConfigPtrOutputWithContext(context.Background())
}

func (o ECDeploymentKibanaConfigOutput) ToECDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaConfigPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaConfig) *ECDeploymentKibanaConfig {
		return &v
	}).(ECDeploymentKibanaConfigPtrOutput)
}
func (o ECDeploymentKibanaConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type ECDeploymentKibanaConfigPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentKibanaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentKibanaConfig)(nil)).Elem()
}

func (o ECDeploymentKibanaConfigPtrOutput) ToECDeploymentKibanaConfigPtrOutput() ECDeploymentKibanaConfigPtrOutput {
	return o
}

func (o ECDeploymentKibanaConfigPtrOutput) ToECDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) ECDeploymentKibanaConfigPtrOutput {
	return o
}

func (o ECDeploymentKibanaConfigPtrOutput) Elem() ECDeploymentKibanaConfigOutput {
	return o.ApplyT(func(v *ECDeploymentKibanaConfig) ECDeploymentKibanaConfig { return *v }).(ECDeploymentKibanaConfigOutput)
}

func (o ECDeploymentKibanaConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type ECDeploymentKibanaTopology struct {
	InstanceConfigurationId *string `pulumi:"instanceConfigurationId"`
	Size                    *string `pulumi:"size"`
	SizeResource            *string `pulumi:"sizeResource"`
	ZoneCount               *int    `pulumi:"zoneCount"`
}

// ECDeploymentKibanaTopologyInput is an input type that accepts ECDeploymentKibanaTopologyArgs and ECDeploymentKibanaTopologyOutput values.
// You can construct a concrete instance of `ECDeploymentKibanaTopologyInput` via:
//
//          ECDeploymentKibanaTopologyArgs{...}
type ECDeploymentKibanaTopologyInput interface {
	pulumi.Input

	ToECDeploymentKibanaTopologyOutput() ECDeploymentKibanaTopologyOutput
	ToECDeploymentKibanaTopologyOutputWithContext(context.Context) ECDeploymentKibanaTopologyOutput
}

type ECDeploymentKibanaTopologyArgs struct {
	InstanceConfigurationId pulumi.StringPtrInput `pulumi:"instanceConfigurationId"`
	Size                    pulumi.StringPtrInput `pulumi:"size"`
	SizeResource            pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (ECDeploymentKibanaTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentKibanaTopology)(nil)).Elem()
}

func (i ECDeploymentKibanaTopologyArgs) ToECDeploymentKibanaTopologyOutput() ECDeploymentKibanaTopologyOutput {
	return i.ToECDeploymentKibanaTopologyOutputWithContext(context.Background())
}

func (i ECDeploymentKibanaTopologyArgs) ToECDeploymentKibanaTopologyOutputWithContext(ctx context.Context) ECDeploymentKibanaTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaTopologyOutput)
}

// ECDeploymentKibanaTopologyArrayInput is an input type that accepts ECDeploymentKibanaTopologyArray and ECDeploymentKibanaTopologyArrayOutput values.
// You can construct a concrete instance of `ECDeploymentKibanaTopologyArrayInput` via:
//
//          ECDeploymentKibanaTopologyArray{ ECDeploymentKibanaTopologyArgs{...} }
type ECDeploymentKibanaTopologyArrayInput interface {
	pulumi.Input

	ToECDeploymentKibanaTopologyArrayOutput() ECDeploymentKibanaTopologyArrayOutput
	ToECDeploymentKibanaTopologyArrayOutputWithContext(context.Context) ECDeploymentKibanaTopologyArrayOutput
}

type ECDeploymentKibanaTopologyArray []ECDeploymentKibanaTopologyInput

func (ECDeploymentKibanaTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentKibanaTopology)(nil)).Elem()
}

func (i ECDeploymentKibanaTopologyArray) ToECDeploymentKibanaTopologyArrayOutput() ECDeploymentKibanaTopologyArrayOutput {
	return i.ToECDeploymentKibanaTopologyArrayOutputWithContext(context.Background())
}

func (i ECDeploymentKibanaTopologyArray) ToECDeploymentKibanaTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentKibanaTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentKibanaTopologyArrayOutput)
}

type ECDeploymentKibanaTopologyOutput struct{ *pulumi.OutputState }

func (ECDeploymentKibanaTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentKibanaTopology)(nil)).Elem()
}

func (o ECDeploymentKibanaTopologyOutput) ToECDeploymentKibanaTopologyOutput() ECDeploymentKibanaTopologyOutput {
	return o
}

func (o ECDeploymentKibanaTopologyOutput) ToECDeploymentKibanaTopologyOutputWithContext(ctx context.Context) ECDeploymentKibanaTopologyOutput {
	return o
}

func (o ECDeploymentKibanaTopologyOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaTopology) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaTopologyOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaTopology) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaTopologyOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaTopology) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentKibanaTopologyOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ECDeploymentKibanaTopology) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type ECDeploymentKibanaTopologyArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentKibanaTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentKibanaTopology)(nil)).Elem()
}

func (o ECDeploymentKibanaTopologyArrayOutput) ToECDeploymentKibanaTopologyArrayOutput() ECDeploymentKibanaTopologyArrayOutput {
	return o
}

func (o ECDeploymentKibanaTopologyArrayOutput) ToECDeploymentKibanaTopologyArrayOutputWithContext(ctx context.Context) ECDeploymentKibanaTopologyArrayOutput {
	return o
}

func (o ECDeploymentKibanaTopologyArrayOutput) Index(i pulumi.IntInput) ECDeploymentKibanaTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentKibanaTopology {
		return vs[0].([]ECDeploymentKibanaTopology)[vs[1].(int)]
	}).(ECDeploymentKibanaTopologyOutput)
}

type ECDeploymentObservability struct {
	DeploymentId string  `pulumi:"deploymentId"`
	Logs         *bool   `pulumi:"logs"`
	Metrics      *bool   `pulumi:"metrics"`
	RefId        *string `pulumi:"refId"`
}

// ECDeploymentObservabilityInput is an input type that accepts ECDeploymentObservabilityArgs and ECDeploymentObservabilityOutput values.
// You can construct a concrete instance of `ECDeploymentObservabilityInput` via:
//
//          ECDeploymentObservabilityArgs{...}
type ECDeploymentObservabilityInput interface {
	pulumi.Input

	ToECDeploymentObservabilityOutput() ECDeploymentObservabilityOutput
	ToECDeploymentObservabilityOutputWithContext(context.Context) ECDeploymentObservabilityOutput
}

type ECDeploymentObservabilityArgs struct {
	DeploymentId pulumi.StringInput    `pulumi:"deploymentId"`
	Logs         pulumi.BoolPtrInput   `pulumi:"logs"`
	Metrics      pulumi.BoolPtrInput   `pulumi:"metrics"`
	RefId        pulumi.StringPtrInput `pulumi:"refId"`
}

func (ECDeploymentObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentObservability)(nil)).Elem()
}

func (i ECDeploymentObservabilityArgs) ToECDeploymentObservabilityOutput() ECDeploymentObservabilityOutput {
	return i.ToECDeploymentObservabilityOutputWithContext(context.Background())
}

func (i ECDeploymentObservabilityArgs) ToECDeploymentObservabilityOutputWithContext(ctx context.Context) ECDeploymentObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentObservabilityOutput)
}

func (i ECDeploymentObservabilityArgs) ToECDeploymentObservabilityPtrOutput() ECDeploymentObservabilityPtrOutput {
	return i.ToECDeploymentObservabilityPtrOutputWithContext(context.Background())
}

func (i ECDeploymentObservabilityArgs) ToECDeploymentObservabilityPtrOutputWithContext(ctx context.Context) ECDeploymentObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentObservabilityOutput).ToECDeploymentObservabilityPtrOutputWithContext(ctx)
}

// ECDeploymentObservabilityPtrInput is an input type that accepts ECDeploymentObservabilityArgs, ECDeploymentObservabilityPtr and ECDeploymentObservabilityPtrOutput values.
// You can construct a concrete instance of `ECDeploymentObservabilityPtrInput` via:
//
//          ECDeploymentObservabilityArgs{...}
//
//  or:
//
//          nil
type ECDeploymentObservabilityPtrInput interface {
	pulumi.Input

	ToECDeploymentObservabilityPtrOutput() ECDeploymentObservabilityPtrOutput
	ToECDeploymentObservabilityPtrOutputWithContext(context.Context) ECDeploymentObservabilityPtrOutput
}

type ecdeploymentObservabilityPtrType ECDeploymentObservabilityArgs

func ECDeploymentObservabilityPtr(v *ECDeploymentObservabilityArgs) ECDeploymentObservabilityPtrInput {
	return (*ecdeploymentObservabilityPtrType)(v)
}

func (*ecdeploymentObservabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentObservability)(nil)).Elem()
}

func (i *ecdeploymentObservabilityPtrType) ToECDeploymentObservabilityPtrOutput() ECDeploymentObservabilityPtrOutput {
	return i.ToECDeploymentObservabilityPtrOutputWithContext(context.Background())
}

func (i *ecdeploymentObservabilityPtrType) ToECDeploymentObservabilityPtrOutputWithContext(ctx context.Context) ECDeploymentObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentObservabilityPtrOutput)
}

type ECDeploymentObservabilityOutput struct{ *pulumi.OutputState }

func (ECDeploymentObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentObservability)(nil)).Elem()
}

func (o ECDeploymentObservabilityOutput) ToECDeploymentObservabilityOutput() ECDeploymentObservabilityOutput {
	return o
}

func (o ECDeploymentObservabilityOutput) ToECDeploymentObservabilityOutputWithContext(ctx context.Context) ECDeploymentObservabilityOutput {
	return o
}

func (o ECDeploymentObservabilityOutput) ToECDeploymentObservabilityPtrOutput() ECDeploymentObservabilityPtrOutput {
	return o.ToECDeploymentObservabilityPtrOutputWithContext(context.Background())
}

func (o ECDeploymentObservabilityOutput) ToECDeploymentObservabilityPtrOutputWithContext(ctx context.Context) ECDeploymentObservabilityPtrOutput {
	return o.ApplyT(func(v ECDeploymentObservability) *ECDeploymentObservability {
		return &v
	}).(ECDeploymentObservabilityPtrOutput)
}
func (o ECDeploymentObservabilityOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentObservability) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o ECDeploymentObservabilityOutput) Logs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentObservability) *bool { return v.Logs }).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentObservabilityOutput) Metrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ECDeploymentObservability) *bool { return v.Metrics }).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentObservabilityOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentObservability) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

type ECDeploymentObservabilityPtrOutput struct{ *pulumi.OutputState }

func (ECDeploymentObservabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ECDeploymentObservability)(nil)).Elem()
}

func (o ECDeploymentObservabilityPtrOutput) ToECDeploymentObservabilityPtrOutput() ECDeploymentObservabilityPtrOutput {
	return o
}

func (o ECDeploymentObservabilityPtrOutput) ToECDeploymentObservabilityPtrOutputWithContext(ctx context.Context) ECDeploymentObservabilityPtrOutput {
	return o
}

func (o ECDeploymentObservabilityPtrOutput) Elem() ECDeploymentObservabilityOutput {
	return o.ApplyT(func(v *ECDeploymentObservability) ECDeploymentObservability { return *v }).(ECDeploymentObservabilityOutput)
}

func (o ECDeploymentObservabilityPtrOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentObservability) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentId
	}).(pulumi.StringPtrOutput)
}

func (o ECDeploymentObservabilityPtrOutput) Logs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ECDeploymentObservability) *bool {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentObservabilityPtrOutput) Metrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ECDeploymentObservability) *bool {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(pulumi.BoolPtrOutput)
}

func (o ECDeploymentObservabilityPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ECDeploymentObservability) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

type ECDeploymentTrafficFilterRule struct {
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	Source      string  `pulumi:"source"`
}

// ECDeploymentTrafficFilterRuleInput is an input type that accepts ECDeploymentTrafficFilterRuleArgs and ECDeploymentTrafficFilterRuleOutput values.
// You can construct a concrete instance of `ECDeploymentTrafficFilterRuleInput` via:
//
//          ECDeploymentTrafficFilterRuleArgs{...}
type ECDeploymentTrafficFilterRuleInput interface {
	pulumi.Input

	ToECDeploymentTrafficFilterRuleOutput() ECDeploymentTrafficFilterRuleOutput
	ToECDeploymentTrafficFilterRuleOutputWithContext(context.Context) ECDeploymentTrafficFilterRuleOutput
}

type ECDeploymentTrafficFilterRuleArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Source      pulumi.StringInput    `pulumi:"source"`
}

func (ECDeploymentTrafficFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentTrafficFilterRule)(nil)).Elem()
}

func (i ECDeploymentTrafficFilterRuleArgs) ToECDeploymentTrafficFilterRuleOutput() ECDeploymentTrafficFilterRuleOutput {
	return i.ToECDeploymentTrafficFilterRuleOutputWithContext(context.Background())
}

func (i ECDeploymentTrafficFilterRuleArgs) ToECDeploymentTrafficFilterRuleOutputWithContext(ctx context.Context) ECDeploymentTrafficFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentTrafficFilterRuleOutput)
}

// ECDeploymentTrafficFilterRuleArrayInput is an input type that accepts ECDeploymentTrafficFilterRuleArray and ECDeploymentTrafficFilterRuleArrayOutput values.
// You can construct a concrete instance of `ECDeploymentTrafficFilterRuleArrayInput` via:
//
//          ECDeploymentTrafficFilterRuleArray{ ECDeploymentTrafficFilterRuleArgs{...} }
type ECDeploymentTrafficFilterRuleArrayInput interface {
	pulumi.Input

	ToECDeploymentTrafficFilterRuleArrayOutput() ECDeploymentTrafficFilterRuleArrayOutput
	ToECDeploymentTrafficFilterRuleArrayOutputWithContext(context.Context) ECDeploymentTrafficFilterRuleArrayOutput
}

type ECDeploymentTrafficFilterRuleArray []ECDeploymentTrafficFilterRuleInput

func (ECDeploymentTrafficFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentTrafficFilterRule)(nil)).Elem()
}

func (i ECDeploymentTrafficFilterRuleArray) ToECDeploymentTrafficFilterRuleArrayOutput() ECDeploymentTrafficFilterRuleArrayOutput {
	return i.ToECDeploymentTrafficFilterRuleArrayOutputWithContext(context.Background())
}

func (i ECDeploymentTrafficFilterRuleArray) ToECDeploymentTrafficFilterRuleArrayOutputWithContext(ctx context.Context) ECDeploymentTrafficFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ECDeploymentTrafficFilterRuleArrayOutput)
}

type ECDeploymentTrafficFilterRuleOutput struct{ *pulumi.OutputState }

func (ECDeploymentTrafficFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ECDeploymentTrafficFilterRule)(nil)).Elem()
}

func (o ECDeploymentTrafficFilterRuleOutput) ToECDeploymentTrafficFilterRuleOutput() ECDeploymentTrafficFilterRuleOutput {
	return o
}

func (o ECDeploymentTrafficFilterRuleOutput) ToECDeploymentTrafficFilterRuleOutputWithContext(ctx context.Context) ECDeploymentTrafficFilterRuleOutput {
	return o
}

func (o ECDeploymentTrafficFilterRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentTrafficFilterRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentTrafficFilterRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ECDeploymentTrafficFilterRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ECDeploymentTrafficFilterRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ECDeploymentTrafficFilterRule) string { return v.Source }).(pulumi.StringOutput)
}

type ECDeploymentTrafficFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (ECDeploymentTrafficFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ECDeploymentTrafficFilterRule)(nil)).Elem()
}

func (o ECDeploymentTrafficFilterRuleArrayOutput) ToECDeploymentTrafficFilterRuleArrayOutput() ECDeploymentTrafficFilterRuleArrayOutput {
	return o
}

func (o ECDeploymentTrafficFilterRuleArrayOutput) ToECDeploymentTrafficFilterRuleArrayOutputWithContext(ctx context.Context) ECDeploymentTrafficFilterRuleArrayOutput {
	return o
}

func (o ECDeploymentTrafficFilterRuleArrayOutput) Index(i pulumi.IntInput) ECDeploymentTrafficFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ECDeploymentTrafficFilterRule {
		return vs[0].([]ECDeploymentTrafficFilterRule)[vs[1].(int)]
	}).(ECDeploymentTrafficFilterRuleOutput)
}

type GetECDeploymentApm struct {
	ElasticsearchClusterRefId string                       `pulumi:"elasticsearchClusterRefId"`
	Healthy                   bool                         `pulumi:"healthy"`
	HttpEndpoint              string                       `pulumi:"httpEndpoint"`
	HttpsEndpoint             string                       `pulumi:"httpsEndpoint"`
	RefId                     string                       `pulumi:"refId"`
	ResourceId                string                       `pulumi:"resourceId"`
	Status                    string                       `pulumi:"status"`
	Topologies                []GetECDeploymentApmTopology `pulumi:"topologies"`
	Version                   string                       `pulumi:"version"`
}

// GetECDeploymentApmInput is an input type that accepts GetECDeploymentApmArgs and GetECDeploymentApmOutput values.
// You can construct a concrete instance of `GetECDeploymentApmInput` via:
//
//          GetECDeploymentApmArgs{...}
type GetECDeploymentApmInput interface {
	pulumi.Input

	ToGetECDeploymentApmOutput() GetECDeploymentApmOutput
	ToGetECDeploymentApmOutputWithContext(context.Context) GetECDeploymentApmOutput
}

type GetECDeploymentApmArgs struct {
	ElasticsearchClusterRefId pulumi.StringInput                   `pulumi:"elasticsearchClusterRefId"`
	Healthy                   pulumi.BoolInput                     `pulumi:"healthy"`
	HttpEndpoint              pulumi.StringInput                   `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringInput                   `pulumi:"httpsEndpoint"`
	RefId                     pulumi.StringInput                   `pulumi:"refId"`
	ResourceId                pulumi.StringInput                   `pulumi:"resourceId"`
	Status                    pulumi.StringInput                   `pulumi:"status"`
	Topologies                GetECDeploymentApmTopologyArrayInput `pulumi:"topologies"`
	Version                   pulumi.StringInput                   `pulumi:"version"`
}

func (GetECDeploymentApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentApm)(nil)).Elem()
}

func (i GetECDeploymentApmArgs) ToGetECDeploymentApmOutput() GetECDeploymentApmOutput {
	return i.ToGetECDeploymentApmOutputWithContext(context.Background())
}

func (i GetECDeploymentApmArgs) ToGetECDeploymentApmOutputWithContext(ctx context.Context) GetECDeploymentApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentApmOutput)
}

// GetECDeploymentApmArrayInput is an input type that accepts GetECDeploymentApmArray and GetECDeploymentApmArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentApmArrayInput` via:
//
//          GetECDeploymentApmArray{ GetECDeploymentApmArgs{...} }
type GetECDeploymentApmArrayInput interface {
	pulumi.Input

	ToGetECDeploymentApmArrayOutput() GetECDeploymentApmArrayOutput
	ToGetECDeploymentApmArrayOutputWithContext(context.Context) GetECDeploymentApmArrayOutput
}

type GetECDeploymentApmArray []GetECDeploymentApmInput

func (GetECDeploymentApmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentApm)(nil)).Elem()
}

func (i GetECDeploymentApmArray) ToGetECDeploymentApmArrayOutput() GetECDeploymentApmArrayOutput {
	return i.ToGetECDeploymentApmArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentApmArray) ToGetECDeploymentApmArrayOutputWithContext(ctx context.Context) GetECDeploymentApmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentApmArrayOutput)
}

type GetECDeploymentApmOutput struct{ *pulumi.OutputState }

func (GetECDeploymentApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentApm)(nil)).Elem()
}

func (o GetECDeploymentApmOutput) ToGetECDeploymentApmOutput() GetECDeploymentApmOutput {
	return o
}

func (o GetECDeploymentApmOutput) ToGetECDeploymentApmOutputWithContext(ctx context.Context) GetECDeploymentApmOutput {
	return o
}

func (o GetECDeploymentApmOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentApm) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o GetECDeploymentApmOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.RefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmOutput) Topologies() GetECDeploymentApmTopologyArrayOutput {
	return o.ApplyT(func(v GetECDeploymentApm) []GetECDeploymentApmTopology { return v.Topologies }).(GetECDeploymentApmTopologyArrayOutput)
}

func (o GetECDeploymentApmOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApm) string { return v.Version }).(pulumi.StringOutput)
}

type GetECDeploymentApmArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentApmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentApm)(nil)).Elem()
}

func (o GetECDeploymentApmArrayOutput) ToGetECDeploymentApmArrayOutput() GetECDeploymentApmArrayOutput {
	return o
}

func (o GetECDeploymentApmArrayOutput) ToGetECDeploymentApmArrayOutputWithContext(ctx context.Context) GetECDeploymentApmArrayOutput {
	return o
}

func (o GetECDeploymentApmArrayOutput) Index(i pulumi.IntInput) GetECDeploymentApmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentApm {
		return vs[0].([]GetECDeploymentApm)[vs[1].(int)]
	}).(GetECDeploymentApmOutput)
}

type GetECDeploymentApmTopology struct {
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	Size                    string `pulumi:"size"`
	SizeResource            string `pulumi:"sizeResource"`
	ZoneCount               int    `pulumi:"zoneCount"`
}

// GetECDeploymentApmTopologyInput is an input type that accepts GetECDeploymentApmTopologyArgs and GetECDeploymentApmTopologyOutput values.
// You can construct a concrete instance of `GetECDeploymentApmTopologyInput` via:
//
//          GetECDeploymentApmTopologyArgs{...}
type GetECDeploymentApmTopologyInput interface {
	pulumi.Input

	ToGetECDeploymentApmTopologyOutput() GetECDeploymentApmTopologyOutput
	ToGetECDeploymentApmTopologyOutputWithContext(context.Context) GetECDeploymentApmTopologyOutput
}

type GetECDeploymentApmTopologyArgs struct {
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	Size                    pulumi.StringInput `pulumi:"size"`
	SizeResource            pulumi.StringInput `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntInput    `pulumi:"zoneCount"`
}

func (GetECDeploymentApmTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentApmTopology)(nil)).Elem()
}

func (i GetECDeploymentApmTopologyArgs) ToGetECDeploymentApmTopologyOutput() GetECDeploymentApmTopologyOutput {
	return i.ToGetECDeploymentApmTopologyOutputWithContext(context.Background())
}

func (i GetECDeploymentApmTopologyArgs) ToGetECDeploymentApmTopologyOutputWithContext(ctx context.Context) GetECDeploymentApmTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentApmTopologyOutput)
}

// GetECDeploymentApmTopologyArrayInput is an input type that accepts GetECDeploymentApmTopologyArray and GetECDeploymentApmTopologyArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentApmTopologyArrayInput` via:
//
//          GetECDeploymentApmTopologyArray{ GetECDeploymentApmTopologyArgs{...} }
type GetECDeploymentApmTopologyArrayInput interface {
	pulumi.Input

	ToGetECDeploymentApmTopologyArrayOutput() GetECDeploymentApmTopologyArrayOutput
	ToGetECDeploymentApmTopologyArrayOutputWithContext(context.Context) GetECDeploymentApmTopologyArrayOutput
}

type GetECDeploymentApmTopologyArray []GetECDeploymentApmTopologyInput

func (GetECDeploymentApmTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentApmTopology)(nil)).Elem()
}

func (i GetECDeploymentApmTopologyArray) ToGetECDeploymentApmTopologyArrayOutput() GetECDeploymentApmTopologyArrayOutput {
	return i.ToGetECDeploymentApmTopologyArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentApmTopologyArray) ToGetECDeploymentApmTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentApmTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentApmTopologyArrayOutput)
}

type GetECDeploymentApmTopologyOutput struct{ *pulumi.OutputState }

func (GetECDeploymentApmTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentApmTopology)(nil)).Elem()
}

func (o GetECDeploymentApmTopologyOutput) ToGetECDeploymentApmTopologyOutput() GetECDeploymentApmTopologyOutput {
	return o
}

func (o GetECDeploymentApmTopologyOutput) ToGetECDeploymentApmTopologyOutputWithContext(ctx context.Context) GetECDeploymentApmTopologyOutput {
	return o
}

func (o GetECDeploymentApmTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApmTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApmTopology) string { return v.Size }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentApmTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

func (o GetECDeploymentApmTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetECDeploymentApmTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetECDeploymentApmTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentApmTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentApmTopology)(nil)).Elem()
}

func (o GetECDeploymentApmTopologyArrayOutput) ToGetECDeploymentApmTopologyArrayOutput() GetECDeploymentApmTopologyArrayOutput {
	return o
}

func (o GetECDeploymentApmTopologyArrayOutput) ToGetECDeploymentApmTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentApmTopologyArrayOutput {
	return o
}

func (o GetECDeploymentApmTopologyArrayOutput) Index(i pulumi.IntInput) GetECDeploymentApmTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentApmTopology {
		return vs[0].([]GetECDeploymentApmTopology)[vs[1].(int)]
	}).(GetECDeploymentApmTopologyOutput)
}

type GetECDeploymentElasticsearch struct {
	CloudId       string                                 `pulumi:"cloudId"`
	Healthy       bool                                   `pulumi:"healthy"`
	HttpEndpoint  string                                 `pulumi:"httpEndpoint"`
	HttpsEndpoint string                                 `pulumi:"httpsEndpoint"`
	RefId         string                                 `pulumi:"refId"`
	ResourceId    string                                 `pulumi:"resourceId"`
	Status        string                                 `pulumi:"status"`
	Topologies    []GetECDeploymentElasticsearchTopology `pulumi:"topologies"`
	Version       string                                 `pulumi:"version"`
}

// GetECDeploymentElasticsearchInput is an input type that accepts GetECDeploymentElasticsearchArgs and GetECDeploymentElasticsearchOutput values.
// You can construct a concrete instance of `GetECDeploymentElasticsearchInput` via:
//
//          GetECDeploymentElasticsearchArgs{...}
type GetECDeploymentElasticsearchInput interface {
	pulumi.Input

	ToGetECDeploymentElasticsearchOutput() GetECDeploymentElasticsearchOutput
	ToGetECDeploymentElasticsearchOutputWithContext(context.Context) GetECDeploymentElasticsearchOutput
}

type GetECDeploymentElasticsearchArgs struct {
	CloudId       pulumi.StringInput                             `pulumi:"cloudId"`
	Healthy       pulumi.BoolInput                               `pulumi:"healthy"`
	HttpEndpoint  pulumi.StringInput                             `pulumi:"httpEndpoint"`
	HttpsEndpoint pulumi.StringInput                             `pulumi:"httpsEndpoint"`
	RefId         pulumi.StringInput                             `pulumi:"refId"`
	ResourceId    pulumi.StringInput                             `pulumi:"resourceId"`
	Status        pulumi.StringInput                             `pulumi:"status"`
	Topologies    GetECDeploymentElasticsearchTopologyArrayInput `pulumi:"topologies"`
	Version       pulumi.StringInput                             `pulumi:"version"`
}

func (GetECDeploymentElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentElasticsearch)(nil)).Elem()
}

func (i GetECDeploymentElasticsearchArgs) ToGetECDeploymentElasticsearchOutput() GetECDeploymentElasticsearchOutput {
	return i.ToGetECDeploymentElasticsearchOutputWithContext(context.Background())
}

func (i GetECDeploymentElasticsearchArgs) ToGetECDeploymentElasticsearchOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentElasticsearchOutput)
}

// GetECDeploymentElasticsearchArrayInput is an input type that accepts GetECDeploymentElasticsearchArray and GetECDeploymentElasticsearchArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentElasticsearchArrayInput` via:
//
//          GetECDeploymentElasticsearchArray{ GetECDeploymentElasticsearchArgs{...} }
type GetECDeploymentElasticsearchArrayInput interface {
	pulumi.Input

	ToGetECDeploymentElasticsearchArrayOutput() GetECDeploymentElasticsearchArrayOutput
	ToGetECDeploymentElasticsearchArrayOutputWithContext(context.Context) GetECDeploymentElasticsearchArrayOutput
}

type GetECDeploymentElasticsearchArray []GetECDeploymentElasticsearchInput

func (GetECDeploymentElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentElasticsearch)(nil)).Elem()
}

func (i GetECDeploymentElasticsearchArray) ToGetECDeploymentElasticsearchArrayOutput() GetECDeploymentElasticsearchArrayOutput {
	return i.ToGetECDeploymentElasticsearchArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentElasticsearchArray) ToGetECDeploymentElasticsearchArrayOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentElasticsearchArrayOutput)
}

type GetECDeploymentElasticsearchOutput struct{ *pulumi.OutputState }

func (GetECDeploymentElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentElasticsearch)(nil)).Elem()
}

func (o GetECDeploymentElasticsearchOutput) ToGetECDeploymentElasticsearchOutput() GetECDeploymentElasticsearchOutput {
	return o
}

func (o GetECDeploymentElasticsearchOutput) ToGetECDeploymentElasticsearchOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchOutput {
	return o
}

func (o GetECDeploymentElasticsearchOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.CloudId }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o GetECDeploymentElasticsearchOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.RefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchOutput) Topologies() GetECDeploymentElasticsearchTopologyArrayOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) []GetECDeploymentElasticsearchTopology { return v.Topologies }).(GetECDeploymentElasticsearchTopologyArrayOutput)
}

func (o GetECDeploymentElasticsearchOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearch) string { return v.Version }).(pulumi.StringOutput)
}

type GetECDeploymentElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentElasticsearch)(nil)).Elem()
}

func (o GetECDeploymentElasticsearchArrayOutput) ToGetECDeploymentElasticsearchArrayOutput() GetECDeploymentElasticsearchArrayOutput {
	return o
}

func (o GetECDeploymentElasticsearchArrayOutput) ToGetECDeploymentElasticsearchArrayOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchArrayOutput {
	return o
}

func (o GetECDeploymentElasticsearchArrayOutput) Index(i pulumi.IntInput) GetECDeploymentElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentElasticsearch {
		return vs[0].([]GetECDeploymentElasticsearch)[vs[1].(int)]
	}).(GetECDeploymentElasticsearchOutput)
}

type GetECDeploymentElasticsearchTopology struct {
	InstanceConfigurationId string   `pulumi:"instanceConfigurationId"`
	NodeRoles               []string `pulumi:"nodeRoles"`
	NodeTypeData            bool     `pulumi:"nodeTypeData"`
	NodeTypeIngest          bool     `pulumi:"nodeTypeIngest"`
	NodeTypeMaster          bool     `pulumi:"nodeTypeMaster"`
	NodeTypeMl              *bool    `pulumi:"nodeTypeMl"`
	Size                    string   `pulumi:"size"`
	SizeResource            string   `pulumi:"sizeResource"`
	ZoneCount               int      `pulumi:"zoneCount"`
}

// GetECDeploymentElasticsearchTopologyInput is an input type that accepts GetECDeploymentElasticsearchTopologyArgs and GetECDeploymentElasticsearchTopologyOutput values.
// You can construct a concrete instance of `GetECDeploymentElasticsearchTopologyInput` via:
//
//          GetECDeploymentElasticsearchTopologyArgs{...}
type GetECDeploymentElasticsearchTopologyInput interface {
	pulumi.Input

	ToGetECDeploymentElasticsearchTopologyOutput() GetECDeploymentElasticsearchTopologyOutput
	ToGetECDeploymentElasticsearchTopologyOutputWithContext(context.Context) GetECDeploymentElasticsearchTopologyOutput
}

type GetECDeploymentElasticsearchTopologyArgs struct {
	InstanceConfigurationId pulumi.StringInput      `pulumi:"instanceConfigurationId"`
	NodeRoles               pulumi.StringArrayInput `pulumi:"nodeRoles"`
	NodeTypeData            pulumi.BoolInput        `pulumi:"nodeTypeData"`
	NodeTypeIngest          pulumi.BoolInput        `pulumi:"nodeTypeIngest"`
	NodeTypeMaster          pulumi.BoolInput        `pulumi:"nodeTypeMaster"`
	NodeTypeMl              pulumi.BoolPtrInput     `pulumi:"nodeTypeMl"`
	Size                    pulumi.StringInput      `pulumi:"size"`
	SizeResource            pulumi.StringInput      `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntInput         `pulumi:"zoneCount"`
}

func (GetECDeploymentElasticsearchTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (i GetECDeploymentElasticsearchTopologyArgs) ToGetECDeploymentElasticsearchTopologyOutput() GetECDeploymentElasticsearchTopologyOutput {
	return i.ToGetECDeploymentElasticsearchTopologyOutputWithContext(context.Background())
}

func (i GetECDeploymentElasticsearchTopologyArgs) ToGetECDeploymentElasticsearchTopologyOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentElasticsearchTopologyOutput)
}

// GetECDeploymentElasticsearchTopologyArrayInput is an input type that accepts GetECDeploymentElasticsearchTopologyArray and GetECDeploymentElasticsearchTopologyArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentElasticsearchTopologyArrayInput` via:
//
//          GetECDeploymentElasticsearchTopologyArray{ GetECDeploymentElasticsearchTopologyArgs{...} }
type GetECDeploymentElasticsearchTopologyArrayInput interface {
	pulumi.Input

	ToGetECDeploymentElasticsearchTopologyArrayOutput() GetECDeploymentElasticsearchTopologyArrayOutput
	ToGetECDeploymentElasticsearchTopologyArrayOutputWithContext(context.Context) GetECDeploymentElasticsearchTopologyArrayOutput
}

type GetECDeploymentElasticsearchTopologyArray []GetECDeploymentElasticsearchTopologyInput

func (GetECDeploymentElasticsearchTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (i GetECDeploymentElasticsearchTopologyArray) ToGetECDeploymentElasticsearchTopologyArrayOutput() GetECDeploymentElasticsearchTopologyArrayOutput {
	return i.ToGetECDeploymentElasticsearchTopologyArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentElasticsearchTopologyArray) ToGetECDeploymentElasticsearchTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentElasticsearchTopologyArrayOutput)
}

type GetECDeploymentElasticsearchTopologyOutput struct{ *pulumi.OutputState }

func (GetECDeploymentElasticsearchTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (o GetECDeploymentElasticsearchTopologyOutput) ToGetECDeploymentElasticsearchTopologyOutput() GetECDeploymentElasticsearchTopologyOutput {
	return o
}

func (o GetECDeploymentElasticsearchTopologyOutput) ToGetECDeploymentElasticsearchTopologyOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchTopologyOutput {
	return o
}

func (o GetECDeploymentElasticsearchTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) NodeTypeData() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) bool { return v.NodeTypeData }).(pulumi.BoolOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) NodeTypeIngest() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) bool { return v.NodeTypeIngest }).(pulumi.BoolOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) NodeTypeMaster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) bool { return v.NodeTypeMaster }).(pulumi.BoolOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) NodeTypeMl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) *bool { return v.NodeTypeMl }).(pulumi.BoolPtrOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) string { return v.Size }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

func (o GetECDeploymentElasticsearchTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetECDeploymentElasticsearchTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetECDeploymentElasticsearchTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentElasticsearchTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentElasticsearchTopology)(nil)).Elem()
}

func (o GetECDeploymentElasticsearchTopologyArrayOutput) ToGetECDeploymentElasticsearchTopologyArrayOutput() GetECDeploymentElasticsearchTopologyArrayOutput {
	return o
}

func (o GetECDeploymentElasticsearchTopologyArrayOutput) ToGetECDeploymentElasticsearchTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentElasticsearchTopologyArrayOutput {
	return o
}

func (o GetECDeploymentElasticsearchTopologyArrayOutput) Index(i pulumi.IntInput) GetECDeploymentElasticsearchTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentElasticsearchTopology {
		return vs[0].([]GetECDeploymentElasticsearchTopology)[vs[1].(int)]
	}).(GetECDeploymentElasticsearchTopologyOutput)
}

type GetECDeploymentEnterpriseSearch struct {
	ElasticsearchClusterRefId string                                    `pulumi:"elasticsearchClusterRefId"`
	Healthy                   bool                                      `pulumi:"healthy"`
	HttpEndpoint              string                                    `pulumi:"httpEndpoint"`
	HttpsEndpoint             string                                    `pulumi:"httpsEndpoint"`
	RefId                     string                                    `pulumi:"refId"`
	ResourceId                string                                    `pulumi:"resourceId"`
	Status                    string                                    `pulumi:"status"`
	Topologies                []GetECDeploymentEnterpriseSearchTopology `pulumi:"topologies"`
	Version                   string                                    `pulumi:"version"`
}

// GetECDeploymentEnterpriseSearchInput is an input type that accepts GetECDeploymentEnterpriseSearchArgs and GetECDeploymentEnterpriseSearchOutput values.
// You can construct a concrete instance of `GetECDeploymentEnterpriseSearchInput` via:
//
//          GetECDeploymentEnterpriseSearchArgs{...}
type GetECDeploymentEnterpriseSearchInput interface {
	pulumi.Input

	ToGetECDeploymentEnterpriseSearchOutput() GetECDeploymentEnterpriseSearchOutput
	ToGetECDeploymentEnterpriseSearchOutputWithContext(context.Context) GetECDeploymentEnterpriseSearchOutput
}

type GetECDeploymentEnterpriseSearchArgs struct {
	ElasticsearchClusterRefId pulumi.StringInput                                `pulumi:"elasticsearchClusterRefId"`
	Healthy                   pulumi.BoolInput                                  `pulumi:"healthy"`
	HttpEndpoint              pulumi.StringInput                                `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringInput                                `pulumi:"httpsEndpoint"`
	RefId                     pulumi.StringInput                                `pulumi:"refId"`
	ResourceId                pulumi.StringInput                                `pulumi:"resourceId"`
	Status                    pulumi.StringInput                                `pulumi:"status"`
	Topologies                GetECDeploymentEnterpriseSearchTopologyArrayInput `pulumi:"topologies"`
	Version                   pulumi.StringInput                                `pulumi:"version"`
}

func (GetECDeploymentEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (i GetECDeploymentEnterpriseSearchArgs) ToGetECDeploymentEnterpriseSearchOutput() GetECDeploymentEnterpriseSearchOutput {
	return i.ToGetECDeploymentEnterpriseSearchOutputWithContext(context.Background())
}

func (i GetECDeploymentEnterpriseSearchArgs) ToGetECDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentEnterpriseSearchOutput)
}

// GetECDeploymentEnterpriseSearchArrayInput is an input type that accepts GetECDeploymentEnterpriseSearchArray and GetECDeploymentEnterpriseSearchArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentEnterpriseSearchArrayInput` via:
//
//          GetECDeploymentEnterpriseSearchArray{ GetECDeploymentEnterpriseSearchArgs{...} }
type GetECDeploymentEnterpriseSearchArrayInput interface {
	pulumi.Input

	ToGetECDeploymentEnterpriseSearchArrayOutput() GetECDeploymentEnterpriseSearchArrayOutput
	ToGetECDeploymentEnterpriseSearchArrayOutputWithContext(context.Context) GetECDeploymentEnterpriseSearchArrayOutput
}

type GetECDeploymentEnterpriseSearchArray []GetECDeploymentEnterpriseSearchInput

func (GetECDeploymentEnterpriseSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (i GetECDeploymentEnterpriseSearchArray) ToGetECDeploymentEnterpriseSearchArrayOutput() GetECDeploymentEnterpriseSearchArrayOutput {
	return i.ToGetECDeploymentEnterpriseSearchArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentEnterpriseSearchArray) ToGetECDeploymentEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentEnterpriseSearchArrayOutput)
}

type GetECDeploymentEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (GetECDeploymentEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (o GetECDeploymentEnterpriseSearchOutput) ToGetECDeploymentEnterpriseSearchOutput() GetECDeploymentEnterpriseSearchOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchOutput) ToGetECDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.RefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) Topologies() GetECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) []GetECDeploymentEnterpriseSearchTopology { return v.Topologies }).(GetECDeploymentEnterpriseSearchTopologyArrayOutput)
}

func (o GetECDeploymentEnterpriseSearchOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearch) string { return v.Version }).(pulumi.StringOutput)
}

type GetECDeploymentEnterpriseSearchArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentEnterpriseSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentEnterpriseSearch)(nil)).Elem()
}

func (o GetECDeploymentEnterpriseSearchArrayOutput) ToGetECDeploymentEnterpriseSearchArrayOutput() GetECDeploymentEnterpriseSearchArrayOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchArrayOutput) ToGetECDeploymentEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchArrayOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchArrayOutput) Index(i pulumi.IntInput) GetECDeploymentEnterpriseSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentEnterpriseSearch {
		return vs[0].([]GetECDeploymentEnterpriseSearch)[vs[1].(int)]
	}).(GetECDeploymentEnterpriseSearchOutput)
}

type GetECDeploymentEnterpriseSearchTopology struct {
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	NodeTypeAppserver       bool   `pulumi:"nodeTypeAppserver"`
	NodeTypeConnector       bool   `pulumi:"nodeTypeConnector"`
	NodeTypeWorker          bool   `pulumi:"nodeTypeWorker"`
	Size                    string `pulumi:"size"`
	SizeResource            string `pulumi:"sizeResource"`
	ZoneCount               int    `pulumi:"zoneCount"`
}

// GetECDeploymentEnterpriseSearchTopologyInput is an input type that accepts GetECDeploymentEnterpriseSearchTopologyArgs and GetECDeploymentEnterpriseSearchTopologyOutput values.
// You can construct a concrete instance of `GetECDeploymentEnterpriseSearchTopologyInput` via:
//
//          GetECDeploymentEnterpriseSearchTopologyArgs{...}
type GetECDeploymentEnterpriseSearchTopologyInput interface {
	pulumi.Input

	ToGetECDeploymentEnterpriseSearchTopologyOutput() GetECDeploymentEnterpriseSearchTopologyOutput
	ToGetECDeploymentEnterpriseSearchTopologyOutputWithContext(context.Context) GetECDeploymentEnterpriseSearchTopologyOutput
}

type GetECDeploymentEnterpriseSearchTopologyArgs struct {
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	NodeTypeAppserver       pulumi.BoolInput   `pulumi:"nodeTypeAppserver"`
	NodeTypeConnector       pulumi.BoolInput   `pulumi:"nodeTypeConnector"`
	NodeTypeWorker          pulumi.BoolInput   `pulumi:"nodeTypeWorker"`
	Size                    pulumi.StringInput `pulumi:"size"`
	SizeResource            pulumi.StringInput `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntInput    `pulumi:"zoneCount"`
}

func (GetECDeploymentEnterpriseSearchTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (i GetECDeploymentEnterpriseSearchTopologyArgs) ToGetECDeploymentEnterpriseSearchTopologyOutput() GetECDeploymentEnterpriseSearchTopologyOutput {
	return i.ToGetECDeploymentEnterpriseSearchTopologyOutputWithContext(context.Background())
}

func (i GetECDeploymentEnterpriseSearchTopologyArgs) ToGetECDeploymentEnterpriseSearchTopologyOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentEnterpriseSearchTopologyOutput)
}

// GetECDeploymentEnterpriseSearchTopologyArrayInput is an input type that accepts GetECDeploymentEnterpriseSearchTopologyArray and GetECDeploymentEnterpriseSearchTopologyArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentEnterpriseSearchTopologyArrayInput` via:
//
//          GetECDeploymentEnterpriseSearchTopologyArray{ GetECDeploymentEnterpriseSearchTopologyArgs{...} }
type GetECDeploymentEnterpriseSearchTopologyArrayInput interface {
	pulumi.Input

	ToGetECDeploymentEnterpriseSearchTopologyArrayOutput() GetECDeploymentEnterpriseSearchTopologyArrayOutput
	ToGetECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(context.Context) GetECDeploymentEnterpriseSearchTopologyArrayOutput
}

type GetECDeploymentEnterpriseSearchTopologyArray []GetECDeploymentEnterpriseSearchTopologyInput

func (GetECDeploymentEnterpriseSearchTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (i GetECDeploymentEnterpriseSearchTopologyArray) ToGetECDeploymentEnterpriseSearchTopologyArrayOutput() GetECDeploymentEnterpriseSearchTopologyArrayOutput {
	return i.ToGetECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentEnterpriseSearchTopologyArray) ToGetECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentEnterpriseSearchTopologyArrayOutput)
}

type GetECDeploymentEnterpriseSearchTopologyOutput struct{ *pulumi.OutputState }

func (GetECDeploymentEnterpriseSearchTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) ToGetECDeploymentEnterpriseSearchTopologyOutput() GetECDeploymentEnterpriseSearchTopologyOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) ToGetECDeploymentEnterpriseSearchTopologyOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchTopologyOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) NodeTypeAppserver() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) bool { return v.NodeTypeAppserver }).(pulumi.BoolOutput)
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) NodeTypeConnector() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) bool { return v.NodeTypeConnector }).(pulumi.BoolOutput)
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) NodeTypeWorker() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) bool { return v.NodeTypeWorker }).(pulumi.BoolOutput)
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) string { return v.Size }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

func (o GetECDeploymentEnterpriseSearchTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetECDeploymentEnterpriseSearchTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetECDeploymentEnterpriseSearchTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentEnterpriseSearchTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (o GetECDeploymentEnterpriseSearchTopologyArrayOutput) ToGetECDeploymentEnterpriseSearchTopologyArrayOutput() GetECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchTopologyArrayOutput) ToGetECDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentEnterpriseSearchTopologyArrayOutput {
	return o
}

func (o GetECDeploymentEnterpriseSearchTopologyArrayOutput) Index(i pulumi.IntInput) GetECDeploymentEnterpriseSearchTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentEnterpriseSearchTopology {
		return vs[0].([]GetECDeploymentEnterpriseSearchTopology)[vs[1].(int)]
	}).(GetECDeploymentEnterpriseSearchTopologyOutput)
}

type GetECDeploymentKibana struct {
	ElasticsearchClusterRefId string                          `pulumi:"elasticsearchClusterRefId"`
	Healthy                   bool                            `pulumi:"healthy"`
	HttpEndpoint              string                          `pulumi:"httpEndpoint"`
	HttpsEndpoint             string                          `pulumi:"httpsEndpoint"`
	RefId                     string                          `pulumi:"refId"`
	ResourceId                string                          `pulumi:"resourceId"`
	Status                    string                          `pulumi:"status"`
	Topologies                []GetECDeploymentKibanaTopology `pulumi:"topologies"`
	Version                   string                          `pulumi:"version"`
}

// GetECDeploymentKibanaInput is an input type that accepts GetECDeploymentKibanaArgs and GetECDeploymentKibanaOutput values.
// You can construct a concrete instance of `GetECDeploymentKibanaInput` via:
//
//          GetECDeploymentKibanaArgs{...}
type GetECDeploymentKibanaInput interface {
	pulumi.Input

	ToGetECDeploymentKibanaOutput() GetECDeploymentKibanaOutput
	ToGetECDeploymentKibanaOutputWithContext(context.Context) GetECDeploymentKibanaOutput
}

type GetECDeploymentKibanaArgs struct {
	ElasticsearchClusterRefId pulumi.StringInput                      `pulumi:"elasticsearchClusterRefId"`
	Healthy                   pulumi.BoolInput                        `pulumi:"healthy"`
	HttpEndpoint              pulumi.StringInput                      `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringInput                      `pulumi:"httpsEndpoint"`
	RefId                     pulumi.StringInput                      `pulumi:"refId"`
	ResourceId                pulumi.StringInput                      `pulumi:"resourceId"`
	Status                    pulumi.StringInput                      `pulumi:"status"`
	Topologies                GetECDeploymentKibanaTopologyArrayInput `pulumi:"topologies"`
	Version                   pulumi.StringInput                      `pulumi:"version"`
}

func (GetECDeploymentKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentKibana)(nil)).Elem()
}

func (i GetECDeploymentKibanaArgs) ToGetECDeploymentKibanaOutput() GetECDeploymentKibanaOutput {
	return i.ToGetECDeploymentKibanaOutputWithContext(context.Background())
}

func (i GetECDeploymentKibanaArgs) ToGetECDeploymentKibanaOutputWithContext(ctx context.Context) GetECDeploymentKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentKibanaOutput)
}

// GetECDeploymentKibanaArrayInput is an input type that accepts GetECDeploymentKibanaArray and GetECDeploymentKibanaArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentKibanaArrayInput` via:
//
//          GetECDeploymentKibanaArray{ GetECDeploymentKibanaArgs{...} }
type GetECDeploymentKibanaArrayInput interface {
	pulumi.Input

	ToGetECDeploymentKibanaArrayOutput() GetECDeploymentKibanaArrayOutput
	ToGetECDeploymentKibanaArrayOutputWithContext(context.Context) GetECDeploymentKibanaArrayOutput
}

type GetECDeploymentKibanaArray []GetECDeploymentKibanaInput

func (GetECDeploymentKibanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentKibana)(nil)).Elem()
}

func (i GetECDeploymentKibanaArray) ToGetECDeploymentKibanaArrayOutput() GetECDeploymentKibanaArrayOutput {
	return i.ToGetECDeploymentKibanaArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentKibanaArray) ToGetECDeploymentKibanaArrayOutputWithContext(ctx context.Context) GetECDeploymentKibanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentKibanaArrayOutput)
}

type GetECDeploymentKibanaOutput struct{ *pulumi.OutputState }

func (GetECDeploymentKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentKibana)(nil)).Elem()
}

func (o GetECDeploymentKibanaOutput) ToGetECDeploymentKibanaOutput() GetECDeploymentKibanaOutput {
	return o
}

func (o GetECDeploymentKibanaOutput) ToGetECDeploymentKibanaOutputWithContext(ctx context.Context) GetECDeploymentKibanaOutput {
	return o
}

func (o GetECDeploymentKibanaOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o GetECDeploymentKibanaOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.RefId }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaOutput) Topologies() GetECDeploymentKibanaTopologyArrayOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) []GetECDeploymentKibanaTopology { return v.Topologies }).(GetECDeploymentKibanaTopologyArrayOutput)
}

func (o GetECDeploymentKibanaOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibana) string { return v.Version }).(pulumi.StringOutput)
}

type GetECDeploymentKibanaArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentKibanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentKibana)(nil)).Elem()
}

func (o GetECDeploymentKibanaArrayOutput) ToGetECDeploymentKibanaArrayOutput() GetECDeploymentKibanaArrayOutput {
	return o
}

func (o GetECDeploymentKibanaArrayOutput) ToGetECDeploymentKibanaArrayOutputWithContext(ctx context.Context) GetECDeploymentKibanaArrayOutput {
	return o
}

func (o GetECDeploymentKibanaArrayOutput) Index(i pulumi.IntInput) GetECDeploymentKibanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentKibana {
		return vs[0].([]GetECDeploymentKibana)[vs[1].(int)]
	}).(GetECDeploymentKibanaOutput)
}

type GetECDeploymentKibanaTopology struct {
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	Size                    string `pulumi:"size"`
	SizeResource            string `pulumi:"sizeResource"`
	ZoneCount               int    `pulumi:"zoneCount"`
}

// GetECDeploymentKibanaTopologyInput is an input type that accepts GetECDeploymentKibanaTopologyArgs and GetECDeploymentKibanaTopologyOutput values.
// You can construct a concrete instance of `GetECDeploymentKibanaTopologyInput` via:
//
//          GetECDeploymentKibanaTopologyArgs{...}
type GetECDeploymentKibanaTopologyInput interface {
	pulumi.Input

	ToGetECDeploymentKibanaTopologyOutput() GetECDeploymentKibanaTopologyOutput
	ToGetECDeploymentKibanaTopologyOutputWithContext(context.Context) GetECDeploymentKibanaTopologyOutput
}

type GetECDeploymentKibanaTopologyArgs struct {
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	Size                    pulumi.StringInput `pulumi:"size"`
	SizeResource            pulumi.StringInput `pulumi:"sizeResource"`
	ZoneCount               pulumi.IntInput    `pulumi:"zoneCount"`
}

func (GetECDeploymentKibanaTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentKibanaTopology)(nil)).Elem()
}

func (i GetECDeploymentKibanaTopologyArgs) ToGetECDeploymentKibanaTopologyOutput() GetECDeploymentKibanaTopologyOutput {
	return i.ToGetECDeploymentKibanaTopologyOutputWithContext(context.Background())
}

func (i GetECDeploymentKibanaTopologyArgs) ToGetECDeploymentKibanaTopologyOutputWithContext(ctx context.Context) GetECDeploymentKibanaTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentKibanaTopologyOutput)
}

// GetECDeploymentKibanaTopologyArrayInput is an input type that accepts GetECDeploymentKibanaTopologyArray and GetECDeploymentKibanaTopologyArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentKibanaTopologyArrayInput` via:
//
//          GetECDeploymentKibanaTopologyArray{ GetECDeploymentKibanaTopologyArgs{...} }
type GetECDeploymentKibanaTopologyArrayInput interface {
	pulumi.Input

	ToGetECDeploymentKibanaTopologyArrayOutput() GetECDeploymentKibanaTopologyArrayOutput
	ToGetECDeploymentKibanaTopologyArrayOutputWithContext(context.Context) GetECDeploymentKibanaTopologyArrayOutput
}

type GetECDeploymentKibanaTopologyArray []GetECDeploymentKibanaTopologyInput

func (GetECDeploymentKibanaTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentKibanaTopology)(nil)).Elem()
}

func (i GetECDeploymentKibanaTopologyArray) ToGetECDeploymentKibanaTopologyArrayOutput() GetECDeploymentKibanaTopologyArrayOutput {
	return i.ToGetECDeploymentKibanaTopologyArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentKibanaTopologyArray) ToGetECDeploymentKibanaTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentKibanaTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentKibanaTopologyArrayOutput)
}

type GetECDeploymentKibanaTopologyOutput struct{ *pulumi.OutputState }

func (GetECDeploymentKibanaTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentKibanaTopology)(nil)).Elem()
}

func (o GetECDeploymentKibanaTopologyOutput) ToGetECDeploymentKibanaTopologyOutput() GetECDeploymentKibanaTopologyOutput {
	return o
}

func (o GetECDeploymentKibanaTopologyOutput) ToGetECDeploymentKibanaTopologyOutputWithContext(ctx context.Context) GetECDeploymentKibanaTopologyOutput {
	return o
}

func (o GetECDeploymentKibanaTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibanaTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibanaTopology) string { return v.Size }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentKibanaTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

func (o GetECDeploymentKibanaTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetECDeploymentKibanaTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetECDeploymentKibanaTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentKibanaTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentKibanaTopology)(nil)).Elem()
}

func (o GetECDeploymentKibanaTopologyArrayOutput) ToGetECDeploymentKibanaTopologyArrayOutput() GetECDeploymentKibanaTopologyArrayOutput {
	return o
}

func (o GetECDeploymentKibanaTopologyArrayOutput) ToGetECDeploymentKibanaTopologyArrayOutputWithContext(ctx context.Context) GetECDeploymentKibanaTopologyArrayOutput {
	return o
}

func (o GetECDeploymentKibanaTopologyArrayOutput) Index(i pulumi.IntInput) GetECDeploymentKibanaTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentKibanaTopology {
		return vs[0].([]GetECDeploymentKibanaTopology)[vs[1].(int)]
	}).(GetECDeploymentKibanaTopologyOutput)
}

type GetECDeploymentObservability struct {
	DeploymentId string `pulumi:"deploymentId"`
	Logs         bool   `pulumi:"logs"`
	Metrics      bool   `pulumi:"metrics"`
	RefId        string `pulumi:"refId"`
}

// GetECDeploymentObservabilityInput is an input type that accepts GetECDeploymentObservabilityArgs and GetECDeploymentObservabilityOutput values.
// You can construct a concrete instance of `GetECDeploymentObservabilityInput` via:
//
//          GetECDeploymentObservabilityArgs{...}
type GetECDeploymentObservabilityInput interface {
	pulumi.Input

	ToGetECDeploymentObservabilityOutput() GetECDeploymentObservabilityOutput
	ToGetECDeploymentObservabilityOutputWithContext(context.Context) GetECDeploymentObservabilityOutput
}

type GetECDeploymentObservabilityArgs struct {
	DeploymentId pulumi.StringInput `pulumi:"deploymentId"`
	Logs         pulumi.BoolInput   `pulumi:"logs"`
	Metrics      pulumi.BoolInput   `pulumi:"metrics"`
	RefId        pulumi.StringInput `pulumi:"refId"`
}

func (GetECDeploymentObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentObservability)(nil)).Elem()
}

func (i GetECDeploymentObservabilityArgs) ToGetECDeploymentObservabilityOutput() GetECDeploymentObservabilityOutput {
	return i.ToGetECDeploymentObservabilityOutputWithContext(context.Background())
}

func (i GetECDeploymentObservabilityArgs) ToGetECDeploymentObservabilityOutputWithContext(ctx context.Context) GetECDeploymentObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentObservabilityOutput)
}

// GetECDeploymentObservabilityArrayInput is an input type that accepts GetECDeploymentObservabilityArray and GetECDeploymentObservabilityArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentObservabilityArrayInput` via:
//
//          GetECDeploymentObservabilityArray{ GetECDeploymentObservabilityArgs{...} }
type GetECDeploymentObservabilityArrayInput interface {
	pulumi.Input

	ToGetECDeploymentObservabilityArrayOutput() GetECDeploymentObservabilityArrayOutput
	ToGetECDeploymentObservabilityArrayOutputWithContext(context.Context) GetECDeploymentObservabilityArrayOutput
}

type GetECDeploymentObservabilityArray []GetECDeploymentObservabilityInput

func (GetECDeploymentObservabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentObservability)(nil)).Elem()
}

func (i GetECDeploymentObservabilityArray) ToGetECDeploymentObservabilityArrayOutput() GetECDeploymentObservabilityArrayOutput {
	return i.ToGetECDeploymentObservabilityArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentObservabilityArray) ToGetECDeploymentObservabilityArrayOutputWithContext(ctx context.Context) GetECDeploymentObservabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentObservabilityArrayOutput)
}

type GetECDeploymentObservabilityOutput struct{ *pulumi.OutputState }

func (GetECDeploymentObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentObservability)(nil)).Elem()
}

func (o GetECDeploymentObservabilityOutput) ToGetECDeploymentObservabilityOutput() GetECDeploymentObservabilityOutput {
	return o
}

func (o GetECDeploymentObservabilityOutput) ToGetECDeploymentObservabilityOutputWithContext(ctx context.Context) GetECDeploymentObservabilityOutput {
	return o
}

func (o GetECDeploymentObservabilityOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentObservability) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o GetECDeploymentObservabilityOutput) Logs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentObservability) bool { return v.Logs }).(pulumi.BoolOutput)
}

func (o GetECDeploymentObservabilityOutput) Metrics() pulumi.BoolOutput {
	return o.ApplyT(func(v GetECDeploymentObservability) bool { return v.Metrics }).(pulumi.BoolOutput)
}

func (o GetECDeploymentObservabilityOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentObservability) string { return v.RefId }).(pulumi.StringOutput)
}

type GetECDeploymentObservabilityArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentObservabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentObservability)(nil)).Elem()
}

func (o GetECDeploymentObservabilityArrayOutput) ToGetECDeploymentObservabilityArrayOutput() GetECDeploymentObservabilityArrayOutput {
	return o
}

func (o GetECDeploymentObservabilityArrayOutput) ToGetECDeploymentObservabilityArrayOutputWithContext(ctx context.Context) GetECDeploymentObservabilityArrayOutput {
	return o
}

func (o GetECDeploymentObservabilityArrayOutput) Index(i pulumi.IntInput) GetECDeploymentObservabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentObservability {
		return vs[0].([]GetECDeploymentObservability)[vs[1].(int)]
	}).(GetECDeploymentObservabilityOutput)
}

type GetECDeploymentsApm struct {
	Healthy *string `pulumi:"healthy"`
	Status  *string `pulumi:"status"`
	Version *string `pulumi:"version"`
}

// GetECDeploymentsApmInput is an input type that accepts GetECDeploymentsApmArgs and GetECDeploymentsApmOutput values.
// You can construct a concrete instance of `GetECDeploymentsApmInput` via:
//
//          GetECDeploymentsApmArgs{...}
type GetECDeploymentsApmInput interface {
	pulumi.Input

	ToGetECDeploymentsApmOutput() GetECDeploymentsApmOutput
	ToGetECDeploymentsApmOutputWithContext(context.Context) GetECDeploymentsApmOutput
}

type GetECDeploymentsApmArgs struct {
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetECDeploymentsApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsApm)(nil)).Elem()
}

func (i GetECDeploymentsApmArgs) ToGetECDeploymentsApmOutput() GetECDeploymentsApmOutput {
	return i.ToGetECDeploymentsApmOutputWithContext(context.Background())
}

func (i GetECDeploymentsApmArgs) ToGetECDeploymentsApmOutputWithContext(ctx context.Context) GetECDeploymentsApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentsApmOutput)
}

type GetECDeploymentsApmOutput struct{ *pulumi.OutputState }

func (GetECDeploymentsApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsApm)(nil)).Elem()
}

func (o GetECDeploymentsApmOutput) ToGetECDeploymentsApmOutput() GetECDeploymentsApmOutput {
	return o
}

func (o GetECDeploymentsApmOutput) ToGetECDeploymentsApmOutputWithContext(ctx context.Context) GetECDeploymentsApmOutput {
	return o
}

func (o GetECDeploymentsApmOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsApm) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsApmOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsApm) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsApmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsApm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetECDeploymentsDeployment struct {
	ApmResourceId              string `pulumi:"apmResourceId"`
	DeploymentId               string `pulumi:"deploymentId"`
	ElasticsearchResourceId    string `pulumi:"elasticsearchResourceId"`
	EnterpriseSearchResourceId string `pulumi:"enterpriseSearchResourceId"`
	KibanaResourceId           string `pulumi:"kibanaResourceId"`
}

// GetECDeploymentsDeploymentInput is an input type that accepts GetECDeploymentsDeploymentArgs and GetECDeploymentsDeploymentOutput values.
// You can construct a concrete instance of `GetECDeploymentsDeploymentInput` via:
//
//          GetECDeploymentsDeploymentArgs{...}
type GetECDeploymentsDeploymentInput interface {
	pulumi.Input

	ToGetECDeploymentsDeploymentOutput() GetECDeploymentsDeploymentOutput
	ToGetECDeploymentsDeploymentOutputWithContext(context.Context) GetECDeploymentsDeploymentOutput
}

type GetECDeploymentsDeploymentArgs struct {
	ApmResourceId              pulumi.StringInput `pulumi:"apmResourceId"`
	DeploymentId               pulumi.StringInput `pulumi:"deploymentId"`
	ElasticsearchResourceId    pulumi.StringInput `pulumi:"elasticsearchResourceId"`
	EnterpriseSearchResourceId pulumi.StringInput `pulumi:"enterpriseSearchResourceId"`
	KibanaResourceId           pulumi.StringInput `pulumi:"kibanaResourceId"`
}

func (GetECDeploymentsDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsDeployment)(nil)).Elem()
}

func (i GetECDeploymentsDeploymentArgs) ToGetECDeploymentsDeploymentOutput() GetECDeploymentsDeploymentOutput {
	return i.ToGetECDeploymentsDeploymentOutputWithContext(context.Background())
}

func (i GetECDeploymentsDeploymentArgs) ToGetECDeploymentsDeploymentOutputWithContext(ctx context.Context) GetECDeploymentsDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentsDeploymentOutput)
}

// GetECDeploymentsDeploymentArrayInput is an input type that accepts GetECDeploymentsDeploymentArray and GetECDeploymentsDeploymentArrayOutput values.
// You can construct a concrete instance of `GetECDeploymentsDeploymentArrayInput` via:
//
//          GetECDeploymentsDeploymentArray{ GetECDeploymentsDeploymentArgs{...} }
type GetECDeploymentsDeploymentArrayInput interface {
	pulumi.Input

	ToGetECDeploymentsDeploymentArrayOutput() GetECDeploymentsDeploymentArrayOutput
	ToGetECDeploymentsDeploymentArrayOutputWithContext(context.Context) GetECDeploymentsDeploymentArrayOutput
}

type GetECDeploymentsDeploymentArray []GetECDeploymentsDeploymentInput

func (GetECDeploymentsDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentsDeployment)(nil)).Elem()
}

func (i GetECDeploymentsDeploymentArray) ToGetECDeploymentsDeploymentArrayOutput() GetECDeploymentsDeploymentArrayOutput {
	return i.ToGetECDeploymentsDeploymentArrayOutputWithContext(context.Background())
}

func (i GetECDeploymentsDeploymentArray) ToGetECDeploymentsDeploymentArrayOutputWithContext(ctx context.Context) GetECDeploymentsDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentsDeploymentArrayOutput)
}

type GetECDeploymentsDeploymentOutput struct{ *pulumi.OutputState }

func (GetECDeploymentsDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsDeployment)(nil)).Elem()
}

func (o GetECDeploymentsDeploymentOutput) ToGetECDeploymentsDeploymentOutput() GetECDeploymentsDeploymentOutput {
	return o
}

func (o GetECDeploymentsDeploymentOutput) ToGetECDeploymentsDeploymentOutputWithContext(ctx context.Context) GetECDeploymentsDeploymentOutput {
	return o
}

func (o GetECDeploymentsDeploymentOutput) ApmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentsDeployment) string { return v.ApmResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentsDeploymentOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentsDeployment) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o GetECDeploymentsDeploymentOutput) ElasticsearchResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentsDeployment) string { return v.ElasticsearchResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentsDeploymentOutput) EnterpriseSearchResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentsDeployment) string { return v.EnterpriseSearchResourceId }).(pulumi.StringOutput)
}

func (o GetECDeploymentsDeploymentOutput) KibanaResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetECDeploymentsDeployment) string { return v.KibanaResourceId }).(pulumi.StringOutput)
}

type GetECDeploymentsDeploymentArrayOutput struct{ *pulumi.OutputState }

func (GetECDeploymentsDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECDeploymentsDeployment)(nil)).Elem()
}

func (o GetECDeploymentsDeploymentArrayOutput) ToGetECDeploymentsDeploymentArrayOutput() GetECDeploymentsDeploymentArrayOutput {
	return o
}

func (o GetECDeploymentsDeploymentArrayOutput) ToGetECDeploymentsDeploymentArrayOutputWithContext(ctx context.Context) GetECDeploymentsDeploymentArrayOutput {
	return o
}

func (o GetECDeploymentsDeploymentArrayOutput) Index(i pulumi.IntInput) GetECDeploymentsDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECDeploymentsDeployment {
		return vs[0].([]GetECDeploymentsDeployment)[vs[1].(int)]
	}).(GetECDeploymentsDeploymentOutput)
}

type GetECDeploymentsElasticsearch struct {
	Healthy *string `pulumi:"healthy"`
	Status  *string `pulumi:"status"`
	Version *string `pulumi:"version"`
}

// GetECDeploymentsElasticsearchInput is an input type that accepts GetECDeploymentsElasticsearchArgs and GetECDeploymentsElasticsearchOutput values.
// You can construct a concrete instance of `GetECDeploymentsElasticsearchInput` via:
//
//          GetECDeploymentsElasticsearchArgs{...}
type GetECDeploymentsElasticsearchInput interface {
	pulumi.Input

	ToGetECDeploymentsElasticsearchOutput() GetECDeploymentsElasticsearchOutput
	ToGetECDeploymentsElasticsearchOutputWithContext(context.Context) GetECDeploymentsElasticsearchOutput
}

type GetECDeploymentsElasticsearchArgs struct {
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetECDeploymentsElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsElasticsearch)(nil)).Elem()
}

func (i GetECDeploymentsElasticsearchArgs) ToGetECDeploymentsElasticsearchOutput() GetECDeploymentsElasticsearchOutput {
	return i.ToGetECDeploymentsElasticsearchOutputWithContext(context.Background())
}

func (i GetECDeploymentsElasticsearchArgs) ToGetECDeploymentsElasticsearchOutputWithContext(ctx context.Context) GetECDeploymentsElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentsElasticsearchOutput)
}

type GetECDeploymentsElasticsearchOutput struct{ *pulumi.OutputState }

func (GetECDeploymentsElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsElasticsearch)(nil)).Elem()
}

func (o GetECDeploymentsElasticsearchOutput) ToGetECDeploymentsElasticsearchOutput() GetECDeploymentsElasticsearchOutput {
	return o
}

func (o GetECDeploymentsElasticsearchOutput) ToGetECDeploymentsElasticsearchOutputWithContext(ctx context.Context) GetECDeploymentsElasticsearchOutput {
	return o
}

func (o GetECDeploymentsElasticsearchOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsElasticsearch) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsElasticsearchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsElasticsearch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsElasticsearchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsElasticsearch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetECDeploymentsEnterpriseSearch struct {
	Healthy *string `pulumi:"healthy"`
	Status  *string `pulumi:"status"`
	Version *string `pulumi:"version"`
}

// GetECDeploymentsEnterpriseSearchInput is an input type that accepts GetECDeploymentsEnterpriseSearchArgs and GetECDeploymentsEnterpriseSearchOutput values.
// You can construct a concrete instance of `GetECDeploymentsEnterpriseSearchInput` via:
//
//          GetECDeploymentsEnterpriseSearchArgs{...}
type GetECDeploymentsEnterpriseSearchInput interface {
	pulumi.Input

	ToGetECDeploymentsEnterpriseSearchOutput() GetECDeploymentsEnterpriseSearchOutput
	ToGetECDeploymentsEnterpriseSearchOutputWithContext(context.Context) GetECDeploymentsEnterpriseSearchOutput
}

type GetECDeploymentsEnterpriseSearchArgs struct {
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetECDeploymentsEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsEnterpriseSearch)(nil)).Elem()
}

func (i GetECDeploymentsEnterpriseSearchArgs) ToGetECDeploymentsEnterpriseSearchOutput() GetECDeploymentsEnterpriseSearchOutput {
	return i.ToGetECDeploymentsEnterpriseSearchOutputWithContext(context.Background())
}

func (i GetECDeploymentsEnterpriseSearchArgs) ToGetECDeploymentsEnterpriseSearchOutputWithContext(ctx context.Context) GetECDeploymentsEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentsEnterpriseSearchOutput)
}

type GetECDeploymentsEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (GetECDeploymentsEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsEnterpriseSearch)(nil)).Elem()
}

func (o GetECDeploymentsEnterpriseSearchOutput) ToGetECDeploymentsEnterpriseSearchOutput() GetECDeploymentsEnterpriseSearchOutput {
	return o
}

func (o GetECDeploymentsEnterpriseSearchOutput) ToGetECDeploymentsEnterpriseSearchOutputWithContext(ctx context.Context) GetECDeploymentsEnterpriseSearchOutput {
	return o
}

func (o GetECDeploymentsEnterpriseSearchOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsEnterpriseSearch) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsEnterpriseSearchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsEnterpriseSearch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsEnterpriseSearchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsEnterpriseSearch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetECDeploymentsKibana struct {
	Healthy *string `pulumi:"healthy"`
	Status  *string `pulumi:"status"`
	Version *string `pulumi:"version"`
}

// GetECDeploymentsKibanaInput is an input type that accepts GetECDeploymentsKibanaArgs and GetECDeploymentsKibanaOutput values.
// You can construct a concrete instance of `GetECDeploymentsKibanaInput` via:
//
//          GetECDeploymentsKibanaArgs{...}
type GetECDeploymentsKibanaInput interface {
	pulumi.Input

	ToGetECDeploymentsKibanaOutput() GetECDeploymentsKibanaOutput
	ToGetECDeploymentsKibanaOutputWithContext(context.Context) GetECDeploymentsKibanaOutput
}

type GetECDeploymentsKibanaArgs struct {
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetECDeploymentsKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsKibana)(nil)).Elem()
}

func (i GetECDeploymentsKibanaArgs) ToGetECDeploymentsKibanaOutput() GetECDeploymentsKibanaOutput {
	return i.ToGetECDeploymentsKibanaOutputWithContext(context.Background())
}

func (i GetECDeploymentsKibanaArgs) ToGetECDeploymentsKibanaOutputWithContext(ctx context.Context) GetECDeploymentsKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECDeploymentsKibanaOutput)
}

type GetECDeploymentsKibanaOutput struct{ *pulumi.OutputState }

func (GetECDeploymentsKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECDeploymentsKibana)(nil)).Elem()
}

func (o GetECDeploymentsKibanaOutput) ToGetECDeploymentsKibanaOutput() GetECDeploymentsKibanaOutput {
	return o
}

func (o GetECDeploymentsKibanaOutput) ToGetECDeploymentsKibanaOutputWithContext(ctx context.Context) GetECDeploymentsKibanaOutput {
	return o
}

func (o GetECDeploymentsKibanaOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsKibana) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsKibanaOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsKibana) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetECDeploymentsKibanaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetECDeploymentsKibana) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetECStackApm struct {
	CapacityConstraintsMax int      `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin int      `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    []string `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         []string `pulumi:"defaultPlugins"`
	Denylists              []string `pulumi:"denylists"`
	DockerImage            string   `pulumi:"dockerImage"`
	Plugins                []string `pulumi:"plugins"`
}

// GetECStackApmInput is an input type that accepts GetECStackApmArgs and GetECStackApmOutput values.
// You can construct a concrete instance of `GetECStackApmInput` via:
//
//          GetECStackApmArgs{...}
type GetECStackApmInput interface {
	pulumi.Input

	ToGetECStackApmOutput() GetECStackApmOutput
	ToGetECStackApmOutputWithContext(context.Context) GetECStackApmOutput
}

type GetECStackApmArgs struct {
	CapacityConstraintsMax pulumi.IntInput         `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin pulumi.IntInput         `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         pulumi.StringArrayInput `pulumi:"defaultPlugins"`
	Denylists              pulumi.StringArrayInput `pulumi:"denylists"`
	DockerImage            pulumi.StringInput      `pulumi:"dockerImage"`
	Plugins                pulumi.StringArrayInput `pulumi:"plugins"`
}

func (GetECStackApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackApm)(nil)).Elem()
}

func (i GetECStackApmArgs) ToGetECStackApmOutput() GetECStackApmOutput {
	return i.ToGetECStackApmOutputWithContext(context.Background())
}

func (i GetECStackApmArgs) ToGetECStackApmOutputWithContext(ctx context.Context) GetECStackApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackApmOutput)
}

// GetECStackApmArrayInput is an input type that accepts GetECStackApmArray and GetECStackApmArrayOutput values.
// You can construct a concrete instance of `GetECStackApmArrayInput` via:
//
//          GetECStackApmArray{ GetECStackApmArgs{...} }
type GetECStackApmArrayInput interface {
	pulumi.Input

	ToGetECStackApmArrayOutput() GetECStackApmArrayOutput
	ToGetECStackApmArrayOutputWithContext(context.Context) GetECStackApmArrayOutput
}

type GetECStackApmArray []GetECStackApmInput

func (GetECStackApmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackApm)(nil)).Elem()
}

func (i GetECStackApmArray) ToGetECStackApmArrayOutput() GetECStackApmArrayOutput {
	return i.ToGetECStackApmArrayOutputWithContext(context.Background())
}

func (i GetECStackApmArray) ToGetECStackApmArrayOutputWithContext(ctx context.Context) GetECStackApmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackApmArrayOutput)
}

type GetECStackApmOutput struct{ *pulumi.OutputState }

func (GetECStackApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackApm)(nil)).Elem()
}

func (o GetECStackApmOutput) ToGetECStackApmOutput() GetECStackApmOutput {
	return o
}

func (o GetECStackApmOutput) ToGetECStackApmOutputWithContext(ctx context.Context) GetECStackApmOutput {
	return o
}

func (o GetECStackApmOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackApm) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

func (o GetECStackApmOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackApm) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

func (o GetECStackApmOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackApm) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

func (o GetECStackApmOutput) DefaultPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackApm) []string { return v.DefaultPlugins }).(pulumi.StringArrayOutput)
}

func (o GetECStackApmOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackApm) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

func (o GetECStackApmOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetECStackApm) string { return v.DockerImage }).(pulumi.StringOutput)
}

func (o GetECStackApmOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackApm) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

type GetECStackApmArrayOutput struct{ *pulumi.OutputState }

func (GetECStackApmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackApm)(nil)).Elem()
}

func (o GetECStackApmArrayOutput) ToGetECStackApmArrayOutput() GetECStackApmArrayOutput {
	return o
}

func (o GetECStackApmArrayOutput) ToGetECStackApmArrayOutputWithContext(ctx context.Context) GetECStackApmArrayOutput {
	return o
}

func (o GetECStackApmArrayOutput) Index(i pulumi.IntInput) GetECStackApmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECStackApm {
		return vs[0].([]GetECStackApm)[vs[1].(int)]
	}).(GetECStackApmOutput)
}

type GetECStackElasticsearch struct {
	CapacityConstraintsMax int      `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin int      `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    []string `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         []string `pulumi:"defaultPlugins"`
	Denylists              []string `pulumi:"denylists"`
	DockerImage            string   `pulumi:"dockerImage"`
	Plugins                []string `pulumi:"plugins"`
}

// GetECStackElasticsearchInput is an input type that accepts GetECStackElasticsearchArgs and GetECStackElasticsearchOutput values.
// You can construct a concrete instance of `GetECStackElasticsearchInput` via:
//
//          GetECStackElasticsearchArgs{...}
type GetECStackElasticsearchInput interface {
	pulumi.Input

	ToGetECStackElasticsearchOutput() GetECStackElasticsearchOutput
	ToGetECStackElasticsearchOutputWithContext(context.Context) GetECStackElasticsearchOutput
}

type GetECStackElasticsearchArgs struct {
	CapacityConstraintsMax pulumi.IntInput         `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin pulumi.IntInput         `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         pulumi.StringArrayInput `pulumi:"defaultPlugins"`
	Denylists              pulumi.StringArrayInput `pulumi:"denylists"`
	DockerImage            pulumi.StringInput      `pulumi:"dockerImage"`
	Plugins                pulumi.StringArrayInput `pulumi:"plugins"`
}

func (GetECStackElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackElasticsearch)(nil)).Elem()
}

func (i GetECStackElasticsearchArgs) ToGetECStackElasticsearchOutput() GetECStackElasticsearchOutput {
	return i.ToGetECStackElasticsearchOutputWithContext(context.Background())
}

func (i GetECStackElasticsearchArgs) ToGetECStackElasticsearchOutputWithContext(ctx context.Context) GetECStackElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackElasticsearchOutput)
}

// GetECStackElasticsearchArrayInput is an input type that accepts GetECStackElasticsearchArray and GetECStackElasticsearchArrayOutput values.
// You can construct a concrete instance of `GetECStackElasticsearchArrayInput` via:
//
//          GetECStackElasticsearchArray{ GetECStackElasticsearchArgs{...} }
type GetECStackElasticsearchArrayInput interface {
	pulumi.Input

	ToGetECStackElasticsearchArrayOutput() GetECStackElasticsearchArrayOutput
	ToGetECStackElasticsearchArrayOutputWithContext(context.Context) GetECStackElasticsearchArrayOutput
}

type GetECStackElasticsearchArray []GetECStackElasticsearchInput

func (GetECStackElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackElasticsearch)(nil)).Elem()
}

func (i GetECStackElasticsearchArray) ToGetECStackElasticsearchArrayOutput() GetECStackElasticsearchArrayOutput {
	return i.ToGetECStackElasticsearchArrayOutputWithContext(context.Background())
}

func (i GetECStackElasticsearchArray) ToGetECStackElasticsearchArrayOutputWithContext(ctx context.Context) GetECStackElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackElasticsearchArrayOutput)
}

type GetECStackElasticsearchOutput struct{ *pulumi.OutputState }

func (GetECStackElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackElasticsearch)(nil)).Elem()
}

func (o GetECStackElasticsearchOutput) ToGetECStackElasticsearchOutput() GetECStackElasticsearchOutput {
	return o
}

func (o GetECStackElasticsearchOutput) ToGetECStackElasticsearchOutputWithContext(ctx context.Context) GetECStackElasticsearchOutput {
	return o
}

func (o GetECStackElasticsearchOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

func (o GetECStackElasticsearchOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

func (o GetECStackElasticsearchOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

func (o GetECStackElasticsearchOutput) DefaultPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) []string { return v.DefaultPlugins }).(pulumi.StringArrayOutput)
}

func (o GetECStackElasticsearchOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

func (o GetECStackElasticsearchOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) string { return v.DockerImage }).(pulumi.StringOutput)
}

func (o GetECStackElasticsearchOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackElasticsearch) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

type GetECStackElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (GetECStackElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackElasticsearch)(nil)).Elem()
}

func (o GetECStackElasticsearchArrayOutput) ToGetECStackElasticsearchArrayOutput() GetECStackElasticsearchArrayOutput {
	return o
}

func (o GetECStackElasticsearchArrayOutput) ToGetECStackElasticsearchArrayOutputWithContext(ctx context.Context) GetECStackElasticsearchArrayOutput {
	return o
}

func (o GetECStackElasticsearchArrayOutput) Index(i pulumi.IntInput) GetECStackElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECStackElasticsearch {
		return vs[0].([]GetECStackElasticsearch)[vs[1].(int)]
	}).(GetECStackElasticsearchOutput)
}

type GetECStackEnterpriseSearch struct {
	CapacityConstraintsMax int      `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin int      `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    []string `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         []string `pulumi:"defaultPlugins"`
	Denylists              []string `pulumi:"denylists"`
	DockerImage            string   `pulumi:"dockerImage"`
	Plugins                []string `pulumi:"plugins"`
}

// GetECStackEnterpriseSearchInput is an input type that accepts GetECStackEnterpriseSearchArgs and GetECStackEnterpriseSearchOutput values.
// You can construct a concrete instance of `GetECStackEnterpriseSearchInput` via:
//
//          GetECStackEnterpriseSearchArgs{...}
type GetECStackEnterpriseSearchInput interface {
	pulumi.Input

	ToGetECStackEnterpriseSearchOutput() GetECStackEnterpriseSearchOutput
	ToGetECStackEnterpriseSearchOutputWithContext(context.Context) GetECStackEnterpriseSearchOutput
}

type GetECStackEnterpriseSearchArgs struct {
	CapacityConstraintsMax pulumi.IntInput         `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin pulumi.IntInput         `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         pulumi.StringArrayInput `pulumi:"defaultPlugins"`
	Denylists              pulumi.StringArrayInput `pulumi:"denylists"`
	DockerImage            pulumi.StringInput      `pulumi:"dockerImage"`
	Plugins                pulumi.StringArrayInput `pulumi:"plugins"`
}

func (GetECStackEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackEnterpriseSearch)(nil)).Elem()
}

func (i GetECStackEnterpriseSearchArgs) ToGetECStackEnterpriseSearchOutput() GetECStackEnterpriseSearchOutput {
	return i.ToGetECStackEnterpriseSearchOutputWithContext(context.Background())
}

func (i GetECStackEnterpriseSearchArgs) ToGetECStackEnterpriseSearchOutputWithContext(ctx context.Context) GetECStackEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackEnterpriseSearchOutput)
}

// GetECStackEnterpriseSearchArrayInput is an input type that accepts GetECStackEnterpriseSearchArray and GetECStackEnterpriseSearchArrayOutput values.
// You can construct a concrete instance of `GetECStackEnterpriseSearchArrayInput` via:
//
//          GetECStackEnterpriseSearchArray{ GetECStackEnterpriseSearchArgs{...} }
type GetECStackEnterpriseSearchArrayInput interface {
	pulumi.Input

	ToGetECStackEnterpriseSearchArrayOutput() GetECStackEnterpriseSearchArrayOutput
	ToGetECStackEnterpriseSearchArrayOutputWithContext(context.Context) GetECStackEnterpriseSearchArrayOutput
}

type GetECStackEnterpriseSearchArray []GetECStackEnterpriseSearchInput

func (GetECStackEnterpriseSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackEnterpriseSearch)(nil)).Elem()
}

func (i GetECStackEnterpriseSearchArray) ToGetECStackEnterpriseSearchArrayOutput() GetECStackEnterpriseSearchArrayOutput {
	return i.ToGetECStackEnterpriseSearchArrayOutputWithContext(context.Background())
}

func (i GetECStackEnterpriseSearchArray) ToGetECStackEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetECStackEnterpriseSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackEnterpriseSearchArrayOutput)
}

type GetECStackEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (GetECStackEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackEnterpriseSearch)(nil)).Elem()
}

func (o GetECStackEnterpriseSearchOutput) ToGetECStackEnterpriseSearchOutput() GetECStackEnterpriseSearchOutput {
	return o
}

func (o GetECStackEnterpriseSearchOutput) ToGetECStackEnterpriseSearchOutputWithContext(ctx context.Context) GetECStackEnterpriseSearchOutput {
	return o
}

func (o GetECStackEnterpriseSearchOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

func (o GetECStackEnterpriseSearchOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

func (o GetECStackEnterpriseSearchOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

func (o GetECStackEnterpriseSearchOutput) DefaultPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) []string { return v.DefaultPlugins }).(pulumi.StringArrayOutput)
}

func (o GetECStackEnterpriseSearchOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

func (o GetECStackEnterpriseSearchOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) string { return v.DockerImage }).(pulumi.StringOutput)
}

func (o GetECStackEnterpriseSearchOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackEnterpriseSearch) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

type GetECStackEnterpriseSearchArrayOutput struct{ *pulumi.OutputState }

func (GetECStackEnterpriseSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackEnterpriseSearch)(nil)).Elem()
}

func (o GetECStackEnterpriseSearchArrayOutput) ToGetECStackEnterpriseSearchArrayOutput() GetECStackEnterpriseSearchArrayOutput {
	return o
}

func (o GetECStackEnterpriseSearchArrayOutput) ToGetECStackEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetECStackEnterpriseSearchArrayOutput {
	return o
}

func (o GetECStackEnterpriseSearchArrayOutput) Index(i pulumi.IntInput) GetECStackEnterpriseSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECStackEnterpriseSearch {
		return vs[0].([]GetECStackEnterpriseSearch)[vs[1].(int)]
	}).(GetECStackEnterpriseSearchOutput)
}

type GetECStackKibana struct {
	CapacityConstraintsMax int      `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin int      `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    []string `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         []string `pulumi:"defaultPlugins"`
	Denylists              []string `pulumi:"denylists"`
	DockerImage            string   `pulumi:"dockerImage"`
	Plugins                []string `pulumi:"plugins"`
}

// GetECStackKibanaInput is an input type that accepts GetECStackKibanaArgs and GetECStackKibanaOutput values.
// You can construct a concrete instance of `GetECStackKibanaInput` via:
//
//          GetECStackKibanaArgs{...}
type GetECStackKibanaInput interface {
	pulumi.Input

	ToGetECStackKibanaOutput() GetECStackKibanaOutput
	ToGetECStackKibanaOutputWithContext(context.Context) GetECStackKibanaOutput
}

type GetECStackKibanaArgs struct {
	CapacityConstraintsMax pulumi.IntInput         `pulumi:"capacityConstraintsMax"`
	CapacityConstraintsMin pulumi.IntInput         `pulumi:"capacityConstraintsMin"`
	CompatibleNodeTypes    pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	DefaultPlugins         pulumi.StringArrayInput `pulumi:"defaultPlugins"`
	Denylists              pulumi.StringArrayInput `pulumi:"denylists"`
	DockerImage            pulumi.StringInput      `pulumi:"dockerImage"`
	Plugins                pulumi.StringArrayInput `pulumi:"plugins"`
}

func (GetECStackKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackKibana)(nil)).Elem()
}

func (i GetECStackKibanaArgs) ToGetECStackKibanaOutput() GetECStackKibanaOutput {
	return i.ToGetECStackKibanaOutputWithContext(context.Background())
}

func (i GetECStackKibanaArgs) ToGetECStackKibanaOutputWithContext(ctx context.Context) GetECStackKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackKibanaOutput)
}

// GetECStackKibanaArrayInput is an input type that accepts GetECStackKibanaArray and GetECStackKibanaArrayOutput values.
// You can construct a concrete instance of `GetECStackKibanaArrayInput` via:
//
//          GetECStackKibanaArray{ GetECStackKibanaArgs{...} }
type GetECStackKibanaArrayInput interface {
	pulumi.Input

	ToGetECStackKibanaArrayOutput() GetECStackKibanaArrayOutput
	ToGetECStackKibanaArrayOutputWithContext(context.Context) GetECStackKibanaArrayOutput
}

type GetECStackKibanaArray []GetECStackKibanaInput

func (GetECStackKibanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackKibana)(nil)).Elem()
}

func (i GetECStackKibanaArray) ToGetECStackKibanaArrayOutput() GetECStackKibanaArrayOutput {
	return i.ToGetECStackKibanaArrayOutputWithContext(context.Background())
}

func (i GetECStackKibanaArray) ToGetECStackKibanaArrayOutputWithContext(ctx context.Context) GetECStackKibanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetECStackKibanaArrayOutput)
}

type GetECStackKibanaOutput struct{ *pulumi.OutputState }

func (GetECStackKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetECStackKibana)(nil)).Elem()
}

func (o GetECStackKibanaOutput) ToGetECStackKibanaOutput() GetECStackKibanaOutput {
	return o
}

func (o GetECStackKibanaOutput) ToGetECStackKibanaOutputWithContext(ctx context.Context) GetECStackKibanaOutput {
	return o
}

func (o GetECStackKibanaOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackKibana) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

func (o GetECStackKibanaOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetECStackKibana) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

func (o GetECStackKibanaOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackKibana) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

func (o GetECStackKibanaOutput) DefaultPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackKibana) []string { return v.DefaultPlugins }).(pulumi.StringArrayOutput)
}

func (o GetECStackKibanaOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackKibana) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

func (o GetECStackKibanaOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetECStackKibana) string { return v.DockerImage }).(pulumi.StringOutput)
}

func (o GetECStackKibanaOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetECStackKibana) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

type GetECStackKibanaArrayOutput struct{ *pulumi.OutputState }

func (GetECStackKibanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetECStackKibana)(nil)).Elem()
}

func (o GetECStackKibanaArrayOutput) ToGetECStackKibanaArrayOutput() GetECStackKibanaArrayOutput {
	return o
}

func (o GetECStackKibanaArrayOutput) ToGetECStackKibanaArrayOutputWithContext(ctx context.Context) GetECStackKibanaArrayOutput {
	return o
}

func (o GetECStackKibanaArrayOutput) Index(i pulumi.IntInput) GetECStackKibanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetECStackKibana {
		return vs[0].([]GetECStackKibana)[vs[1].(int)]
	}).(GetECStackKibanaOutput)
}

func init() {
	pulumi.RegisterOutputType(ECDeploymentApmOutput{})
	pulumi.RegisterOutputType(ECDeploymentApmPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentApmConfigOutput{})
	pulumi.RegisterOutputType(ECDeploymentApmConfigPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentApmTopologyOutput{})
	pulumi.RegisterOutputType(ECDeploymentApmTopologyArrayOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchExtensionOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchExtensionArrayOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchRemoteClusterOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchRemoteClusterArrayOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchSnapshotSourceOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchSnapshotSourcePtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchTopologyOutput{})
	pulumi.RegisterOutputType(ECDeploymentElasticsearchTopologyArrayOutput{})
	pulumi.RegisterOutputType(ECDeploymentEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(ECDeploymentEnterpriseSearchPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentEnterpriseSearchConfigOutput{})
	pulumi.RegisterOutputType(ECDeploymentEnterpriseSearchConfigPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentEnterpriseSearchTopologyOutput{})
	pulumi.RegisterOutputType(ECDeploymentEnterpriseSearchTopologyArrayOutput{})
	pulumi.RegisterOutputType(ECDeploymentKibanaOutput{})
	pulumi.RegisterOutputType(ECDeploymentKibanaPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentKibanaConfigOutput{})
	pulumi.RegisterOutputType(ECDeploymentKibanaConfigPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentKibanaTopologyOutput{})
	pulumi.RegisterOutputType(ECDeploymentKibanaTopologyArrayOutput{})
	pulumi.RegisterOutputType(ECDeploymentObservabilityOutput{})
	pulumi.RegisterOutputType(ECDeploymentObservabilityPtrOutput{})
	pulumi.RegisterOutputType(ECDeploymentTrafficFilterRuleOutput{})
	pulumi.RegisterOutputType(ECDeploymentTrafficFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentApmOutput{})
	pulumi.RegisterOutputType(GetECDeploymentApmArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentApmTopologyOutput{})
	pulumi.RegisterOutputType(GetECDeploymentApmTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentElasticsearchOutput{})
	pulumi.RegisterOutputType(GetECDeploymentElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentElasticsearchTopologyOutput{})
	pulumi.RegisterOutputType(GetECDeploymentElasticsearchTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(GetECDeploymentEnterpriseSearchArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentEnterpriseSearchTopologyOutput{})
	pulumi.RegisterOutputType(GetECDeploymentEnterpriseSearchTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentKibanaOutput{})
	pulumi.RegisterOutputType(GetECDeploymentKibanaArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentKibanaTopologyOutput{})
	pulumi.RegisterOutputType(GetECDeploymentKibanaTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentObservabilityOutput{})
	pulumi.RegisterOutputType(GetECDeploymentObservabilityArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentsApmOutput{})
	pulumi.RegisterOutputType(GetECDeploymentsDeploymentOutput{})
	pulumi.RegisterOutputType(GetECDeploymentsDeploymentArrayOutput{})
	pulumi.RegisterOutputType(GetECDeploymentsElasticsearchOutput{})
	pulumi.RegisterOutputType(GetECDeploymentsEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(GetECDeploymentsKibanaOutput{})
	pulumi.RegisterOutputType(GetECStackApmOutput{})
	pulumi.RegisterOutputType(GetECStackApmArrayOutput{})
	pulumi.RegisterOutputType(GetECStackElasticsearchOutput{})
	pulumi.RegisterOutputType(GetECStackElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(GetECStackEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(GetECStackEnterpriseSearchArrayOutput{})
	pulumi.RegisterOutputType(GetECStackKibanaOutput{})
	pulumi.RegisterOutputType(GetECStackKibanaArrayOutput{})
}
